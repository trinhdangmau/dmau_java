/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Cursor;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static main.function.MCH;
import static main.function.lc2;
import net.proteanit.sql.DbUtils;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.*;


/**
 *
 * @author trinhdangmau
 */
public class add_customer_frame extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs =null;
    PreparedStatement pst =null;
    /**
     * Creates new form add_customer_frame
     */
    public add_customer_frame() {
        initComponents();
        conn=javaconnect.ConnecrDb();
        Update_table_customer();
        setIcon();
    }
    
    private void setIcon() {
        String purl = lc2();
        String Url = purl+"/database/logo90.png";
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(Url));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_company_cust = new javax.swing.JTextField();
        txt_email_cust = new javax.swing.JTextField();
        txt_name_cust = new javax.swing.JTextField();
        txt_note_cust = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_phone_cust = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_code_cust = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_add_cust = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_district_cust = new javax.swing.JTextField();
        txt_province_cust = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_fax_cust = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cmd_close = new javax.swing.JButton();
        cmd_addnew = new javax.swing.JButton();
        cmd_save = new javax.swing.JButton();
        cmd_delete = new javax.swing.JButton();
        cmd_update = new javax.swing.JButton();
        lable_by_user = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_customer = new javax.swing.JTable();
        txt_total_cust = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_file = new javax.swing.JMenu();
        menu_close = new javax.swing.JMenuItem();
        menu_edit = new javax.swing.JMenu();
        cmd_refreshtable = new javax.swing.JMenuItem();
        menu_tools = new javax.swing.JMenu();
        menu_export_xls = new javax.swing.JMenuItem();
        menu_export_csv = new javax.swing.JMenuItem();
        menu_import_csv = new javax.swing.JMenuItem();
        menu_search = new javax.swing.JMenu();
        search_name = new javax.swing.JMenuItem();
        search_ID = new javax.swing.JMenuItem();
        search_city = new javax.swing.JMenuItem();
        search_company = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        cmd_deleteall = new javax.swing.JMenuItem();
        menu_help = new javax.swing.JMenu();
        menu_aboutus = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Thông tin khách hàng");

        jLabel4.setText("Quận/huyện :");

        jLabel1.setText("ID Khách hàng: ");

        jLabel3.setText("Địa chỉ :");

        jLabel9.setText("Địa chỉ Email :");

        jLabel2.setText("Họ và Tên :");

        jLabel7.setText("Số điện thoại :");

        jLabel6.setText("Công Ty :");

        jLabel5.setText("Tỉnh/Thành phố :");

        jLabel8.setText("Số Fax : ");

        jLabel10.setText("Ghi Chú :");

        cmd_close.setText(" Đóng");
        cmd_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_closeActionPerformed(evt);
            }
        });

        cmd_addnew.setText("Thêm mới");
        cmd_addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_addnewActionPerformed(evt);
            }
        });

        cmd_save.setText("Lưu");
        cmd_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_saveActionPerformed(evt);
            }
        });

        cmd_delete.setText("Xóa");
        cmd_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_deleteActionPerformed(evt);
            }
        });

        cmd_update.setText("Update");
        cmd_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_updateActionPerformed(evt);
            }
        });

        lable_by_user.setText("+(editted)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(12, 12, 12))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(42, 42, 42))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(64, 64, 64))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(22, 22, 22))
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(54, 54, 54))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(21, 21, 21))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(63, 63, 63))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(24, 24, 24))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(57, 57, 57)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_code_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_name_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_add_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_district_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_province_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_company_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_phone_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_fax_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_email_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_note_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lable_by_user, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cmd_addnew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmd_save, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmd_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmd_update, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmd_close, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(10, 10, 10))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txt_add_cust, txt_code_cust, txt_company_cust, txt_district_cust, txt_email_cust, txt_fax_cust, txt_name_cust, txt_note_cust, txt_phone_cust, txt_province_cust});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_code_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_name_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_add_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_district_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_province_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_company_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_phone_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_fax_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_email_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_note_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lable_by_user)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmd_addnew)
                    .addComponent(cmd_save)
                    .addComponent(cmd_delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmd_close)
                    .addComponent(cmd_update))
                .addContainerGap())
        );

        tbl_customer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_customer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_customerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_customer);

        txt_total_cust.setText("+total");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(txt_total_cust, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(txt_total_cust)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setText("Quản lý Khách Hàng");

        menu_file.setText("File");

        menu_close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menu_close.setText("Close");
        menu_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_closeActionPerformed(evt);
            }
        });
        menu_file.add(menu_close);

        jMenuBar1.add(menu_file);

        menu_edit.setText("Edit");

        cmd_refreshtable.setText("Refresh table");
        cmd_refreshtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_refreshtableActionPerformed(evt);
            }
        });
        menu_edit.add(cmd_refreshtable);

        jMenuBar1.add(menu_edit);

        menu_tools.setText("Tools");

        menu_export_xls.setText("Export to .xlsx");
        menu_export_xls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_xlsActionPerformed(evt);
            }
        });
        menu_tools.add(menu_export_xls);

        menu_export_csv.setText("Export to .csv");
        menu_export_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_csvActionPerformed(evt);
            }
        });
        menu_tools.add(menu_export_csv);

        menu_import_csv.setText("Import from .csv");
        menu_import_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_import_csvActionPerformed(evt);
            }
        });
        menu_tools.add(menu_import_csv);

        jMenuBar1.add(menu_tools);

        menu_search.setText("Tìm kiếm");

        search_name.setText("Theo tên KH");
        search_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_nameActionPerformed(evt);
            }
        });
        menu_search.add(search_name);

        search_ID.setText("Theo Mã KH");
        menu_search.add(search_ID);

        search_city.setText("Theo thành phố");
        menu_search.add(search_city);

        search_company.setText("Theo Công ty");
        menu_search.add(search_company);

        jMenuBar1.add(menu_search);

        jMenu1.setText("Advance");

        cmd_deleteall.setText("Delete All");
        cmd_deleteall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_deleteallActionPerformed(evt);
            }
        });
        jMenu1.add(cmd_deleteall);

        jMenuBar1.add(jMenu1);

        menu_help.setText("Help");

        menu_aboutus.setText("About us");
        menu_aboutus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_aboutusActionPerformed(evt);
            }
        });
        menu_help.add(menu_aboutus);

        jMenuBar1.add(menu_help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(24, 24, 24)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmd_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_closeActionPerformed
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_cmd_closeActionPerformed

    private void cmd_addnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_addnewActionPerformed
        String sql = "SELECT * FROM customer ORDER BY code_cust DESC LIMIT 1";
        try {
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            String mch = MCH();
            if(rs.next()){
                String code_cust =rs.getString("code_cust").substring(4); 
                int code = Integer.parseInt(code_cust);
                String code_up = Integer.toString(code+1);
                int n = 8 - 4 - code_up.length();
                String zero = new String(new char[n]).replace("\0", "0");
                String code_2 = "KH"+ mch + zero + code_up;
                txt_code_cust.setText(code_2);
            }else{
                txt_code_cust.setText("KH"+mch+"0001");
            }
        } catch (SQLException ex) {
            Logger.getLogger(add_customer_frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        txt_name_cust.setText("");
        txt_add_cust.setText("");
        txt_district_cust.setText("");
        txt_province_cust.setText("");
        txt_company_cust.setText("");
        txt_phone_cust.setText("");
        txt_fax_cust.setText("");
        txt_email_cust.setText("");
        txt_note_cust.setText("");
        txt_name_cust.requestFocusInWindow();
    }//GEN-LAST:event_cmd_addnewActionPerformed

    private void tbl_customerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_customerMouseClicked
        try{
        int row=tbl_customer.getSelectedRow();
        String Table_click=(tbl_customer.getModel().getValueAt(row, 0).toString());
            
            String sql="SELECT *  FROM customer WHERE customer.code_cust ='"+Table_click+"'   ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            
            if(rs.next()){
                String code_cust =rs.getString("code_cust"); txt_code_cust.setText(code_cust);
                String name_cust =rs.getString("name_cust"); txt_name_cust.setText(name_cust); 
                String add_cust =rs.getString("add_cust"); txt_add_cust.setText(add_cust); 
                String district_cust =rs.getString("district_cust"); txt_district_cust.setText(district_cust); 
                String province_cust =rs.getString("province_cust"); txt_province_cust.setText(province_cust); 
                String company_cust =rs.getString("company_cust"); txt_company_cust.setText(company_cust); 
                String phone_cust =rs.getString("phone_cust"); txt_phone_cust.setText(phone_cust);
                String fax_cust =rs.getString("fax_cust"); txt_fax_cust.setText(fax_cust); 
                String email_cust =rs.getString("email_cust"); txt_email_cust.setText(email_cust);
                String note_cust =rs.getString("note_cust"); txt_note_cust.setText(note_cust);
                String user_cust =rs.getString("user_cust"); lable_by_user.setText(user_cust);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }//GEN-LAST:event_tbl_customerMouseClicked

    private void cmd_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_saveActionPerformed
        try{
            String sql ="INSERT INTO customer (code_cust, name_cust, add_cust, district_cust, province_cust, "
                    + "company_cust, phone_cust, fax_cust, email_cust, note_cust, user_cust) values (?,?,?,?,?,?,?,?,?,?,?)";

                pst =conn.prepareStatement(sql);
                pst.setString(1, txt_code_cust.getText());
                pst.setString(2, txt_name_cust.getText());
                pst.setString(3, txt_add_cust.getText());
                pst.setString(4, txt_district_cust.getText());
                pst.setString(5, txt_province_cust.getText());
                pst.setString(6, txt_company_cust.getText());
                pst.setString(7, txt_phone_cust.getText());
                pst.setString(8, txt_fax_cust.getText());
                pst.setString(9, txt_email_cust.getText());
                pst.setString(10, txt_note_cust.getText());
                pst.setString(11, dashboard.lable_user.getText());
                pst.execute();

            JOptionPane.showMessageDialog(null, "Một thông tin khách hàng mới vừa được thêm vào!");

            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                    finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_table_customer();
    }//GEN-LAST:event_cmd_saveActionPerformed

    private void cmd_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_deleteActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa dữ liệu khách hàng này không?", "Delete Class", JOptionPane.YES_NO_OPTION);
        if (p==0){
        try{
            String sql="DELETE FROM customer where code_cust = ?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, txt_code_cust.getText());
            pst.execute();
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}
        }

        Update_table_customer();
    }//GEN-LAST:event_cmd_deleteActionPerformed

    private void cmd_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_updateActionPerformed
        try{
            String  code_cust = txt_code_cust.getText();
            String name_cust = txt_name_cust.getText();
            String add_cust = txt_add_cust.getText();
            String district_cust = txt_district_cust.getText();
            String province_cust = txt_province_cust.getText();
            String company_cust = txt_company_cust.getText();
            String phone_cust = txt_phone_cust.getText();
            String fax_cust = txt_fax_cust.getText();
            String email_cust = txt_email_cust.getText();
            String note_cust = txt_note_cust.getText();
            String user_cust = dashboard.lable_user.getText();

            String sql ="UPDATE customer SET name_cust = '"+name_cust+"', add_cust = '"+add_cust+"', "
                    + "district_cust = '"+district_cust+"', province_cust = '"+province_cust+"', company_cust = '"+company_cust+"', "
                    + "phone_cust = '"+phone_cust+"' , fax_cust = '"+fax_cust+"', email_cust = '"+email_cust+"', "
                    + "note_cust = '"+note_cust+"', user_cust = '"+user_cust+"' WHERE code_cust ='"+code_cust+"'  ";
            pst=conn.prepareStatement(sql);
            pst.execute();


            JOptionPane.showMessageDialog(null, "Một thông tin khách hàng vừa được cập nhật !");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_table_customer();
    }//GEN-LAST:event_cmd_updateActionPerformed

    private void search_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_nameActionPerformed
        String search = "%"+txt_name_cust.getText() + "%";
    
    String sql ="SELECT code_cust AS 'ID', name_cust AS 'Họ tên', phone_cust AS 'Phone' FROM customer WHERE name_cust LIKE '"+search+"' ORDER BY code_cust";
    String sql1="SELECT count(code_cust) FROM customer WHERE name_cust LIKE '"+search+"' ";
    try{
       
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    tbl_customer.setModel(DbUtils.resultSetToTableModel(rs));
    tbl_customer.getColumnModel().getColumn(0).setPreferredWidth(12);
            }
    catch (Exception e){JOptionPane.showMessageDialog(null, e);}
    finally {try {rs.close(); pst.close();}catch (Exception e){}}
    
    try {
           pst =conn.prepareStatement(sql1);
           rs =pst.executeQuery();
           
           if (rs.next()){
               String count = rs.getString("count(code_cust)");
               txt_total_cust.setText("Có "+count+" khách hàng phù hợp với kết quả tìm kiếm");
           }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e); }
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }//GEN-LAST:event_search_nameActionPerformed

    private void menu_export_xlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_xlsActionPerformed
    JFileChooser chooser = new JFileChooser();
    chooser.setDialogTitle("Export customer to .xls file");
    int retval = chooser.showSaveDialog(null);
    File f = chooser.getSelectedFile();
    String outputDirPath=f.getAbsolutePath();
    
    if (retval==JFileChooser.APPROVE_OPTION){
        if(f.exists()) {
            int p =JOptionPane.showConfirmDialog(null, "File is existed! Do you want to over write?", "Over-write", JOptionPane.YES_NO_OPTION);
            if (p==1){
            return;
            }
        }

            Workbook wb = new HSSFWorkbook();
            Sheet personSheet = wb.createSheet("Customer");
            //create font style
            HSSFFont font = (HSSFFont) wb.createFont();
            font.setColor(HSSFFont.COLOR_RED);
            font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
            font.setFontHeightInPoints((short) 24);
            HSSFCellStyle cellStyle= (HSSFCellStyle) wb.createCellStyle();
            cellStyle.setFont(font);
            //
            Row titlerow = personSheet.createRow(0);
            titlerow.setHeightInPoints((short) 26);
            Cell nametitle = titlerow.createCell(0);
            nametitle.setCellStyle(cellStyle);
            nametitle.setCellValue("Danh Sách Khách Hàng");
            

            Row headerRow = personSheet.createRow(1);
                Cell code_cust = headerRow.createCell(0); code_cust.setCellValue("Customer ID");
                Cell name_cust = headerRow.createCell(1); name_cust.setCellValue("Customer Name");
                Cell add_cust = headerRow.createCell(2); add_cust.setCellValue("address");
                Cell district_cust = headerRow.createCell(3); district_cust.setCellValue("District");
                Cell province_cust = headerRow.createCell(4); province_cust.setCellValue("Province");
                Cell company_cust = headerRow.createCell(5); company_cust.setCellValue("Company");
                Cell phone_cust = headerRow.createCell(6); phone_cust.setCellValue("Phone");
                Cell fax_cust = headerRow.createCell(7); fax_cust.setCellValue("Fax");
                Cell email_cust = headerRow.createCell(8); email_cust.setCellValue("Email");
                Cell note_cust = headerRow.createCell(9); note_cust.setCellValue("Note");

            try{
            String sql = "SELECT code_cust, name_cust, add_cust, district_cust, province_cust, company_cust, phone_cust, fax_cust, email_cust, note_cust"
                    + " FROM customer ORDER BY code_cust ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery(); 

            int row = 2;
            while(rs.next()) {
                Row dataRow = personSheet.createRow(row);
                    
                Cell code_custCell = dataRow.createCell(0);
                    code_custCell.setCellValue(rs.getString("code_cust"));
                Cell name_custCell = dataRow.createCell(1);
                    name_custCell.setCellValue(rs.getString("name_cust"));
                Cell add_custCell = dataRow.createCell(2);
                    add_custCell.setCellValue(rs.getString("add_cust"));
                Cell district_custCell = dataRow.createCell(3);
                    district_custCell.setCellValue(rs.getString("district_cust"));
                Cell province_custCell = dataRow.createCell(4);
                    province_custCell.setCellValue(rs.getString("province_cust"));
                Cell company_custCell = dataRow.createCell(5);
                    company_custCell.setCellValue(rs.getString("company_cust"));
                Cell phone_custCell = dataRow.createCell(6);
                    phone_custCell.setCellValue(rs.getString("phone_cust"));
                Cell fax_custCell = dataRow.createCell(7);
                    fax_custCell.setCellValue(rs.getString("fax_cust"));
                Cell email_custCell = dataRow.createCell(8);
                    email_custCell.setCellValue(rs.getString("email_cust"));
                Cell note_custCell = dataRow.createCell(9);
                    note_custCell.setCellValue(rs.getString("note_cust"));
                    
                row = row + 1;
            }


            FileOutputStream fileOut = new FileOutputStream(outputDirPath);
            wb.write(fileOut);
            fileOut.close();
            JOptionPane.showMessageDialog(null, "The Customer List was exported to " + outputDirPath);
            } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }
    }//GEN-LAST:event_menu_export_xlsActionPerformed

    private void menu_import_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_import_csvActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn import danh sách khách hàng?", "Import Customer", JOptionPane.YES_NO_OPTION);
        if (p==0){
        try{
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String filename1 = f.getAbsolutePath();
            
            BufferedReader br = new BufferedReader(new FileReader(filename1));
            String line;

            while((line = br.readLine())!=null){
                line = line.substring(1, line.length() - 1);
                line=line.replace("null", "");
                String[] value= line.split("\",\""); //seperator \",\"
                //System.out.println(value[1]);
                String sql = "INSERT INTO 'customer' (code_cust, name_cust, add_cust, "
                        + "district_cust, province_cust, company_cust, phone_cust, "
                        + "fax_cust, email_cust, note_cust, user_cust) "
                        + "values ('"+value[0]+"', '"+value[1]+"', '"+value[2]+"', "
                        + "'"+value[3]+"', '"+value[4]+"', '"+value[5]+"', '"+value[6]+"', "
                        + "'"+value[7]+"', '"+value[8]+"', '"+value[9]+"', '"+value[10]+"')";
                pst=conn.prepareStatement(sql);
                pst.executeUpdate();
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            }
            br.close();
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}
        }

        Update_table_customer();
    }//GEN-LAST:event_menu_import_csvActionPerformed

    private void menu_export_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_csvActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export table CUSTOMER to .csv file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
        if(f.exists()) {
            int p =JOptionPane.showConfirmDialog(null, "File đã có! Bạn có muốn ghi đè lên file này?", "Over-write", JOptionPane.YES_NO_OPTION);
            if (p==1){
            return;
            }
        }
            try{
            FileWriter fw = new FileWriter(outputDirPath);
            String sql = " SELECT * FROM customer ORDER BY code_cust ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery(); 

            while(rs.next()) {
                fw.append('"'); fw.append(rs.getString("code_cust")); fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("name_cust"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("add_cust"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("district_cust"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("province_cust"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("company_cust"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("phone_cust"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("fax_cust"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("email_cust"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("note_cust"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("user_cust"));fw.append('"'); fw.append('\n');
            }
            fw.flush();
            fw.close();
            
            JOptionPane.showMessageDialog(null, "Dữ liệu khách hàng đã được xuất tới " + outputDirPath);
            } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        
        }
    }//GEN-LAST:event_menu_export_csvActionPerformed

    private void cmd_deleteallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_deleteallActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa hết dữ liệu?", "Delete CUSTOMER", JOptionPane.YES_NO_OPTION);
        if (p==0){
        try{
            String sql="DELETE FROM customer";
            pst=conn.prepareStatement(sql);
            pst.execute();
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}
        }
        Update_table_customer();
    }//GEN-LAST:event_cmd_deleteallActionPerformed

    private void cmd_refreshtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_refreshtableActionPerformed
        Update_table_customer();
    }//GEN-LAST:event_cmd_refreshtableActionPerformed

    private void menu_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_closeActionPerformed
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_menu_closeActionPerformed

    private void menu_aboutusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_aboutusActionPerformed
        new aboutus_frame().setVisible(true);
    }//GEN-LAST:event_menu_aboutusActionPerformed
private void Update_table_customer(){
        try{
        String sql = "SELECT code_cust AS 'ID', name_cust AS 'Họ tên', phone_cust AS 'Phone' FROM customer ORDER BY code_cust";
        pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        tbl_customer.setModel(DbUtils.resultSetToTableModel(rs));
        tbl_customer.getColumnModel().getColumn(0).setPreferredWidth(12);
                }
        catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close(); pst.close();}catch (Exception e){}}
    
    try {
        String sql1="SELECT count(code_cust) FROM customer ";
           pst =conn.prepareStatement(sql1);
           rs =pst.executeQuery();
           
           if (rs.next()){
               String count = rs.getString("count(code_cust)");
               txt_total_cust.setText("Tổng số lượng khách hàng là:"+count);
           }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e); }
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(add_customer_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(add_customer_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(add_customer_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(add_customer_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new add_customer_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_addnew;
    private javax.swing.JButton cmd_close;
    private javax.swing.JButton cmd_delete;
    private javax.swing.JMenuItem cmd_deleteall;
    private javax.swing.JMenuItem cmd_refreshtable;
    private javax.swing.JButton cmd_save;
    private javax.swing.JButton cmd_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lable_by_user;
    private javax.swing.JMenuItem menu_aboutus;
    private javax.swing.JMenuItem menu_close;
    private javax.swing.JMenu menu_edit;
    private javax.swing.JMenuItem menu_export_csv;
    private javax.swing.JMenuItem menu_export_xls;
    private javax.swing.JMenu menu_file;
    private javax.swing.JMenu menu_help;
    private javax.swing.JMenuItem menu_import_csv;
    private javax.swing.JMenu menu_search;
    private javax.swing.JMenu menu_tools;
    private javax.swing.JMenuItem search_ID;
    private javax.swing.JMenuItem search_city;
    private javax.swing.JMenuItem search_company;
    private javax.swing.JMenuItem search_name;
    private javax.swing.JTable tbl_customer;
    private javax.swing.JTextField txt_add_cust;
    private javax.swing.JTextField txt_code_cust;
    private javax.swing.JTextField txt_company_cust;
    private javax.swing.JTextField txt_district_cust;
    private javax.swing.JTextField txt_email_cust;
    private javax.swing.JTextField txt_fax_cust;
    private javax.swing.JTextField txt_name_cust;
    private javax.swing.JTextField txt_note_cust;
    private javax.swing.JTextField txt_phone_cust;
    private javax.swing.JTextField txt_province_cust;
    private javax.swing.JLabel txt_total_cust;
    // End of variables declaration//GEN-END:variables
}
