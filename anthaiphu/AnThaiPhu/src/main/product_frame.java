/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Cursor;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFileChooser;
import static main.function.MCH;
import static main.function.lc2;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

/**
 *
 * @author trinhdangmau
 */
public class product_frame extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs =null;
    PreparedStatement pst =null;

    /**
     * Creates new form product_frame
     */
    public product_frame() {
        initComponents();
        conn=javaconnect.ConnecrDb();
        Update_table_product();
        setIcon();
    }

    private void setIcon() {
        String purl = lc2();
        String Url = purl+"/database/logo90.png";
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(Url));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_product = new javax.swing.JTable();
        txt_code_prod = new javax.swing.JTextField();
        txt_name_prod = new javax.swing.JTextField();
        txt_original_prod = new javax.swing.JTextField();
        txt_unit_prod = new javax.swing.JTextField();
        txt_descript_prod = new javax.swing.JTextField();
        txt_price_prod = new javax.swing.JTextField();
        txt_note_prod = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmd_close = new javax.swing.JButton();
        cmd_addnew = new javax.swing.JButton();
        cmd_save = new javax.swing.JButton();
        cmd_delete = new javax.swing.JButton();
        cmd_update = new javax.swing.JButton();
        txt_total_prod = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_close = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menu_refreshtable = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menu_export_xls = new javax.swing.JMenuItem();
        menu_export_csv = new javax.swing.JMenuItem();
        menu_import_csv = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        menu_deleteall = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Sản phẩm");

        tbl_product.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbl_product.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_productMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_product);

        jLabel1.setText("Mã sản phẩm :");

        jLabel2.setText("Tên sản phẩm :");

        jLabel3.setText("Xuất xứ :");

        jLabel4.setText("Đơn vị :");

        jLabel5.setText("Mô tả :");

        jLabel6.setText("Đơn giá gốc :");

        jLabel7.setText("Ghi chú :");

        cmd_close.setText(" Đóng");
        cmd_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_closeActionPerformed(evt);
            }
        });

        cmd_addnew.setText("Thêm mới");
        cmd_addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_addnewActionPerformed(evt);
            }
        });

        cmd_save.setText("Lưu");
        cmd_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_saveActionPerformed(evt);
            }
        });

        cmd_delete.setText("Xóa");
        cmd_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_deleteActionPerformed(evt);
            }
        });

        cmd_update.setText("Update");
        cmd_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_updateActionPerformed(evt);
            }
        });

        txt_total_prod.setText("+(number product)");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database/logo30.png"))); // NOI18N
        jLabel11.setText("Quản lý Sản Phẩm");

        jMenu1.setText("File");

        menu_close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menu_close.setText("Close");
        menu_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_closeActionPerformed(evt);
            }
        });
        jMenu1.add(menu_close);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        menu_refreshtable.setText("Refresh table");
        menu_refreshtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_refreshtableActionPerformed(evt);
            }
        });
        jMenu2.add(menu_refreshtable);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Tools");

        menu_export_xls.setText("Export to .xls");
        menu_export_xls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_xlsActionPerformed(evt);
            }
        });
        jMenu3.add(menu_export_xls);

        menu_export_csv.setText("Export to .csv");
        menu_export_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_csvActionPerformed(evt);
            }
        });
        jMenu3.add(menu_export_csv);

        menu_import_csv.setText("Import from .csv");
        menu_import_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_import_csvActionPerformed(evt);
            }
        });
        jMenu3.add(menu_import_csv);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Search");
        jMenuBar1.add(jMenu4);

        jMenu6.setText("Advance");

        menu_deleteall.setText("Delete All");
        menu_deleteall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_deleteallActionPerformed(evt);
            }
        });
        jMenu6.add(menu_deleteall);

        jMenuBar1.add(jMenu6);

        jMenu5.setText("Help");
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_descript_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_price_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_note_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_code_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_name_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_original_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_unit_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmd_addnew)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(cmd_update, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmd_close, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmd_save, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmd_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_total_prod, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txt_code_prod, txt_descript_prod, txt_name_prod, txt_note_prod, txt_original_prod, txt_price_prod, txt_unit_prod});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_code_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_name_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_original_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_unit_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_descript_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_price_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_note_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmd_addnew)
                            .addComponent(cmd_save)
                            .addComponent(cmd_delete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmd_update)
                            .addComponent(cmd_close)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_total_prod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void Update_table_product(){
        try{
        String sql = "SELECT code_prod AS 'ID', name_prod AS 'Tên SP', original_prod AS 'Xuất xứ' FROM product_information";
        pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        tbl_product.setModel(DbUtils.resultSetToTableModel(rs));
        tbl_product.getColumnModel().getColumn(0).setPreferredWidth(12);
                }
        catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close(); pst.close();}catch (Exception e){}}
    
    try {
        String sql1="SELECT count(code_prod) FROM product_information ";
           pst =conn.prepareStatement(sql1);
           rs =pst.executeQuery();
           
           if (rs.next()){
               String count = rs.getString("count(code_prod)");
               txt_total_prod.setText("Tổng số lượng Sản phẩm là:"+count);
           }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e); }
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }
    
    private void cmd_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_closeActionPerformed
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_cmd_closeActionPerformed

    private void cmd_addnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_addnewActionPerformed
        String sql = "SELECT * FROM product_information ORDER BY code_prod DESC LIMIT 1";
        try {
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            String mch = MCH();
            if(rs.next()){
                String code_prod =rs.getString("code_prod").substring(4);
                int code = Integer.parseInt(code_prod);
                String code_up = Integer.toString(code+1);
                int n = 8 - 4 - code_up.length();
                String zero = new String(new char[n]).replace("\0", "0");
                String code_2 = "SP"+ mch+zero + code_up;
                txt_code_prod.setText(code_2);
            }else{
                txt_code_prod.setText("SP"+mch+"0001");
            }
        } catch (Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }

        txt_name_prod.setText("");
        txt_original_prod.setText("");
        txt_unit_prod.setText("");
        txt_descript_prod.setText("");
        txt_price_prod.setText("");
        txt_note_prod.setText("");
        txt_name_prod.requestFocusInWindow();
    }//GEN-LAST:event_cmd_addnewActionPerformed

    private void cmd_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_saveActionPerformed
        try{
            String sql ="INSERT INTO product_information (code_prod, name_prod, original_prod, unit_prod, descript_prod, price_prod, "
                    + "note_prod, user_prod) values (?,?,?,?,?,?,?,?)";

            pst =conn.prepareStatement(sql);
            pst.setString(1, txt_code_prod.getText());
            pst.setString(2, txt_name_prod.getText());
            pst.setString(3, txt_original_prod.getText());
            pst.setString(4, txt_unit_prod.getText());
            pst.setString(5, txt_descript_prod.getText());
            pst.setString(6, txt_price_prod.getText());
            pst.setString(7, txt_note_prod.getText());
            pst.setString(8, dashboard.lable_user.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một thông tin Sản phẩm mới vừa được thêm vào!");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_table_product();
    }//GEN-LAST:event_cmd_saveActionPerformed

    private void cmd_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_deleteActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa dữ liệu Sản Phẩm này không?", "Delete Class", JOptionPane.YES_NO_OPTION);
        if (p==0){
            try{
                String sql="DELETE FROM product_information where code_prod = ?";
                pst=conn.prepareStatement(sql);
                pst.setString(1, txt_code_prod.getText());
                pst.execute();
            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        }

        Update_table_product();
    }//GEN-LAST:event_cmd_deleteActionPerformed

    private void cmd_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_updateActionPerformed
        try{
            String code_prod = txt_code_prod.getText();
            String name_prod = txt_name_prod.getText();
            String original_prod = txt_original_prod.getText();
            String unit_prod = txt_unit_prod.getText();
            String descript_prod = txt_descript_prod.getText();
            String price_prod = txt_price_prod.getText();
            String note_prod = txt_note_prod.getText();
            String user_prod = dashboard.lable_user.getText();

            String sql ="UPDATE product_information SET code_prod = '"+code_prod+"', name_prod = '"+name_prod+"', "
            + "original_prod = '"+original_prod+"', unit_prod = '"+unit_prod+"', descript_prod = '"+descript_prod+"', "
            + "price_prod = '"+price_prod+"' , note_prod = '"+note_prod+"', user_prod = '"+user_prod+"' WHERE code_prod ='"+code_prod+"'  ";
            pst=conn.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một thông tin Sản Phẩm vừa được cập nhật !");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_table_product();
    }//GEN-LAST:event_cmd_updateActionPerformed

    private void tbl_productMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_productMouseClicked
        try{
            int row=tbl_product.getSelectedRow();
            String Table_click=(tbl_product.getModel().getValueAt(row, 0).toString());

            String sql="SELECT *  FROM product_information WHERE product_information.code_prod ='"+Table_click+"'   ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String code_prod =rs.getString("code_prod"); txt_code_prod.setText(code_prod);
                String name_prod =rs.getString("name_prod"); txt_name_prod.setText(name_prod);
                String original_prod =rs.getString("original_prod"); txt_original_prod.setText(original_prod);
                String unit_prod =rs.getString("unit_prod"); txt_unit_prod.setText(unit_prod);
                String descript_prod =rs.getString("descript_prod"); txt_descript_prod.setText(descript_prod);
                String price_prod =rs.getString("price_prod"); txt_price_prod.setText(price_prod);
                String note_prod =rs.getString("note_prod"); txt_note_prod.setText(note_prod);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }//GEN-LAST:event_tbl_productMouseClicked

    private void menu_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_closeActionPerformed
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_menu_closeActionPerformed

    private void menu_refreshtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_refreshtableActionPerformed
        Update_table_product();
    }//GEN-LAST:event_menu_refreshtableActionPerformed

    private void menu_export_xlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_xlsActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export Product Information to .xls file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
            if(f.exists()) {
                int p =JOptionPane.showConfirmDialog(null, "File này đã có! Bạn có muốn ghi đè lên file này k?", "Over-write", JOptionPane.YES_NO_OPTION);
                if (p==1){
                return;
                }
            }

                Workbook wb = new HSSFWorkbook();
                Sheet personSheet = wb.createSheet("product_information");
                //create font style
                HSSFFont font = (HSSFFont) wb.createFont();
                font.setColor(HSSFFont.COLOR_RED);
                font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
                font.setFontHeightInPoints((short) 24);
                HSSFCellStyle cellStyle= (HSSFCellStyle) wb.createCellStyle();
                cellStyle.setFont(font);
                //
                Row titlerow = personSheet.createRow(0);
                titlerow.setHeightInPoints((short) 26);
                Cell nametitle = titlerow.createCell(0);
                nametitle.setCellStyle(cellStyle);
                nametitle.setCellValue("Danh Sách Sản Phẩm");


                Row headerRow = personSheet.createRow(1);
                    Cell code_cust = headerRow.createCell(0); code_cust.setCellValue("Product ID");
                    Cell name_cust = headerRow.createCell(1); name_cust.setCellValue("Name");
                    Cell add_cust = headerRow.createCell(2); add_cust.setCellValue("Original");
                    Cell district_cust = headerRow.createCell(3); district_cust.setCellValue("unit");
                    Cell province_cust = headerRow.createCell(4); province_cust.setCellValue("describe");
                    Cell company_cust = headerRow.createCell(5); company_cust.setCellValue("price");
                    Cell phone_cust = headerRow.createCell(6); phone_cust.setCellValue("note");
                    Cell fax_cust = headerRow.createCell(7); fax_cust.setCellValue("user");

                try{
                String sql = "SELECT code_prod, name_prod, original_prod, unit_prod,"
                        + " descript_prod, price_prod, note_prod, user_prod"
                        + " FROM product_information ORDER BY code_prod ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery(); 

                int row = 2;
                while(rs.next()) {
                    Row dataRow = personSheet.createRow(row);

                    Cell code_prodCell = dataRow.createCell(0);
                        code_prodCell.setCellValue(rs.getString("code_prod"));
                    Cell name_prodCell = dataRow.createCell(1);
                        name_prodCell.setCellValue(rs.getString("name_prod"));
                    Cell add_custCell = dataRow.createCell(2);
                        add_custCell.setCellValue(rs.getString("original_prod"));
                    Cell district_custCell = dataRow.createCell(3);
                        district_custCell.setCellValue(rs.getString("unit_prod"));
                    Cell province_custCell = dataRow.createCell(4);
                        province_custCell.setCellValue(rs.getString("descript_prod"));
                    Cell company_custCell = dataRow.createCell(5);
                        company_custCell.setCellValue(rs.getString("price_prod"));
                    Cell phone_custCell = dataRow.createCell(6);
                        phone_custCell.setCellValue(rs.getString("note_prod"));
                    Cell fax_custCell = dataRow.createCell(7);
                        fax_custCell.setCellValue(rs.getString("user_prod"));

                    row = row + 1;
                }


                FileOutputStream fileOut = new FileOutputStream(outputDirPath);
                wb.write(fileOut);
                fileOut.close();
                JOptionPane.showMessageDialog(null, "Danh sách Sản phẩm đã được xuất tới " + outputDirPath);
                } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally { try { rs.close(); pst.close();}catch (Exception e){  } }
        }
    }//GEN-LAST:event_menu_export_xlsActionPerformed

    private void menu_export_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_csvActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export table PRODUCE to .csv file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
        if(f.exists()) {
            int p =JOptionPane.showConfirmDialog(null, "File đã có! Bạn có muốn ghi đè lên file này?", "Over-write", JOptionPane.YES_NO_OPTION);
            if (p==1){
            return;
            }
        }
            try{
            FileWriter fw = new FileWriter(outputDirPath);
            String sql = " SELECT * FROM product_information ORDER BY code_prod ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery(); 

            while(rs.next()) {
                fw.append('"'); fw.append(rs.getString("code_prod")); fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("name_prod"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("original_prod"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("unit_prod"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("descript_prod"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("price_prod"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("note_prod"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("user_prod"));fw.append('"'); fw.append('\n');
            }
            fw.flush();
            fw.close();
            
            JOptionPane.showMessageDialog(null, "Dữ liệu Sản phẩm đã được xuất tới " + outputDirPath);
            } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        
        }
    }//GEN-LAST:event_menu_export_csvActionPerformed

    private void menu_import_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_import_csvActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn import danh sách Sản phẩm?", "Import Product_Informations", JOptionPane.YES_NO_OPTION);
        if (p==0){
        try{
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String filename1 = f.getAbsolutePath();
            
            BufferedReader br = new BufferedReader(new FileReader(filename1));
            String line;

            while((line = br.readLine())!=null){
                line = line.substring(1, line.length() - 1);
                line=line.replace("null", "");
                String[] value= line.split("\",\""); //seperator \",\"
                String sql = "INSERT INTO product_information (code_prod, name_prod, original_prod, "
                        + "unit_prod, descript_prod, price_prod, note_prod, user_prod) "
                        + "values ('"+value[0]+"', '"+value[1]+"', '"+value[2]+"', "
                        + "'"+value[3]+"', '"+value[4]+"', '"+value[5]+"', '"+value[6]+"', "
                        + "'"+value[7]+"')";
                pst=conn.prepareStatement(sql);
                pst.executeUpdate();
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            }
            br.close();
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}
        }

        Update_table_product();
    }//GEN-LAST:event_menu_import_csvActionPerformed

    private void menu_deleteallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_deleteallActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa hết dữ liệu?", "Delete PRODUCT", JOptionPane.YES_NO_OPTION);
        if (p==0){
        try{
            String sql="DELETE FROM product_information";
            pst=conn.prepareStatement(sql);
            pst.execute();
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}
        }
        Update_table_product();
    }//GEN-LAST:event_menu_deleteallActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(product_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(product_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(product_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(product_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new product_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_addnew;
    private javax.swing.JButton cmd_close;
    private javax.swing.JButton cmd_delete;
    private javax.swing.JButton cmd_save;
    private javax.swing.JButton cmd_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menu_close;
    private javax.swing.JMenuItem menu_deleteall;
    private javax.swing.JMenuItem menu_export_csv;
    private javax.swing.JMenuItem menu_export_xls;
    private javax.swing.JMenuItem menu_import_csv;
    private javax.swing.JMenuItem menu_refreshtable;
    private javax.swing.JTable tbl_product;
    private javax.swing.JTextField txt_code_prod;
    private javax.swing.JTextField txt_descript_prod;
    private javax.swing.JTextField txt_name_prod;
    private javax.swing.JTextField txt_note_prod;
    private javax.swing.JTextField txt_original_prod;
    private javax.swing.JTextField txt_price_prod;
    private javax.swing.JLabel txt_total_prod;
    private javax.swing.JTextField txt_unit_prod;
    // End of variables declaration//GEN-END:variables
}
