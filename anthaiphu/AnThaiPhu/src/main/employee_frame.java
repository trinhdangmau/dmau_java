/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Cursor;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static main.function.MCH;
import static main.function.lc2;
import net.proteanit.sql.DbUtils;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

/**
 *
 * @author trinhdangmau
 */
public class employee_frame extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs =null;
    PreparedStatement pst =null;
    /**
     * Creates new form employee_frame
     */
    public employee_frame() {
        initComponents();
        conn=javaconnect.ConnecrDb();
        Update_table_employee();
        setIcon();
    }

    private void setIcon() {
        String purl = lc2();
        String Url = purl+"/database/logo90.png";
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(Url));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmd_close = new javax.swing.JButton();
        cmd_addnew = new javax.swing.JButton();
        cmd_save = new javax.swing.JButton();
        cmd_delete = new javax.swing.JButton();
        cmd_update = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_employee = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_code_empl = new javax.swing.JTextField();
        txt_name_empl = new javax.swing.JTextField();
        txt_gender_empl = new javax.swing.JTextField();
        txt_maritalstatus_empl = new javax.swing.JTextField();
        txt_salariedflag_empl = new javax.swing.JTextField();
        txt_hometown_empl = new javax.swing.JTextField();
        txt_position_empl = new javax.swing.JTextField();
        txt_enrolltime_empl = new com.toedter.calendar.JDateChooser();
        txt_birthdate_empl = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_close = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menu_refreshtable = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menu_export_xls = new javax.swing.JMenuItem();
        menu_export_csv = new javax.swing.JMenuItem();
        menu_import_csv = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        menu_deleteall = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thông tin nhân viên");

        cmd_close.setText(" Đóng");
        cmd_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_closeActionPerformed(evt);
            }
        });

        cmd_addnew.setText("Thêm mới");
        cmd_addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_addnewActionPerformed(evt);
            }
        });

        cmd_save.setText("Lưu");
        cmd_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_saveActionPerformed(evt);
            }
        });

        cmd_delete.setText("Xóa");
        cmd_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_deleteActionPerformed(evt);
            }
        });

        cmd_update.setText("Update");
        cmd_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_updateActionPerformed(evt);
            }
        });

        tbl_employee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_employee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_employeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_employee);

        jLabel1.setText("Mã NV :");

        jLabel2.setText("Tên NV:");

        jLabel3.setText("Ngày sinh:");

        jLabel4.setText("Giới tính:");

        jLabel5.setText("Hôn nhân:");

        jLabel6.setText("Mã lương:");

        jLabel7.setText("Nguyên quán:");

        jLabel8.setText("TG làm việc:");

        jLabel9.setText("Vị trí:");

        txt_position_empl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_position_emplActionPerformed(evt);
            }
        });

        txt_enrolltime_empl.setDateFormatString("yyyy-MM-dd");

        txt_birthdate_empl.setDateFormatString("yyyy-MM-dd");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setText("Quản lý Nhân Viên");

        jMenu1.setText("File");

        menu_close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menu_close.setText("Close");
        menu_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_closeActionPerformed(evt);
            }
        });
        jMenu1.add(menu_close);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        menu_refreshtable.setText("Refresh table");
        menu_refreshtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_refreshtableActionPerformed(evt);
            }
        });
        jMenu2.add(menu_refreshtable);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Tools");

        menu_export_xls.setText("Export to .xls");
        menu_export_xls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_xlsActionPerformed(evt);
            }
        });
        jMenu3.add(menu_export_xls);

        menu_export_csv.setText("Export to .csv");
        menu_export_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_csvActionPerformed(evt);
            }
        });
        jMenu3.add(menu_export_csv);

        menu_import_csv.setText("Import from .csv");
        menu_import_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_import_csvActionPerformed(evt);
            }
        });
        jMenu3.add(menu_import_csv);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Advance");

        menu_deleteall.setText("Delete All");
        menu_deleteall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_deleteallActionPerformed(evt);
            }
        });
        jMenu4.add(menu_deleteall);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Help");
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_maritalstatus_empl)
                                    .addComponent(txt_gender_empl)
                                    .addComponent(txt_name_empl)
                                    .addComponent(txt_code_empl)
                                    .addComponent(txt_salariedflag_empl)
                                    .addComponent(txt_hometown_empl, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_position_empl)
                                    .addComponent(txt_enrolltime_empl, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(txt_birthdate_empl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cmd_update, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cmd_close, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cmd_addnew)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cmd_save, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cmd_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_code_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_name_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_birthdate_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_gender_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_maritalstatus_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_salariedflag_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txt_hometown_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_enrolltime_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_position_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmd_addnew)
                            .addComponent(cmd_save)
                            .addComponent(cmd_delete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmd_close)
                            .addComponent(cmd_update))))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Update_table_employee(){
        try{
        String sql = "SELECT code_empl AS 'ID', name_empl AS 'Họ tên', "
                + "salariedflag_empl AS 'Mã lương', position_empl AS 'Vị trí' FROM Employee";
        pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        tbl_employee.setModel(DbUtils.resultSetToTableModel(rs));
        tbl_employee.getColumnModel().getColumn(0).setPreferredWidth(12);
                }
        catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close(); pst.close();}catch (Exception e){}}
    }
    
    private void cmd_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_closeActionPerformed
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_cmd_closeActionPerformed

    private void cmd_addnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_addnewActionPerformed
        String sql = "SELECT * FROM Employee ORDER BY code_empl DESC LIMIT 1";
        try {
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            String mch = MCH();
            if(rs.next()){
                String code_empl =rs.getString("code_empl").substring(4);
                int code = Integer.parseInt(code_empl);
                String code_up = Integer.toString(code+1);
                int n = 8 - 4 - code_up.length();
                String zero = new String(new char[n]).replace("\0", "0");
                String code_2 = "NV"+ mch+ zero + code_up;
                txt_code_empl.setText(code_2);
            }else{
                txt_code_empl.setText("NV"+mch+"0001");
            }
        } catch (SQLException ex) {
            Logger.getLogger(add_customer_frame.class.getName()).log(Level.SEVERE, null, ex);
        }

        txt_name_empl.setText("");
        txt_birthdate_empl.setDate(null);
        txt_gender_empl.setText("");
        txt_maritalstatus_empl.setText("");
        txt_salariedflag_empl.setText("");
        txt_hometown_empl.setText("");
        txt_enrolltime_empl.setDate(null);
        txt_position_empl.setText("");
        txt_name_empl.requestFocusInWindow();
    }//GEN-LAST:event_cmd_addnewActionPerformed

    private void cmd_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_saveActionPerformed
        try{
            String sql ="INSERT INTO Employee (code_empl, name_empl, birthdate_empl, gender_empl, maritalstatus_empl, "
            + "salariedflag_empl, hometown_empl, enrolltime_empl, position_empl, user_empl) values (?,?,?,?,?,?,?,?,?,?)";

            pst =conn.prepareStatement(sql);
            pst.setString(1, txt_code_empl.getText());
            pst.setString(2, txt_name_empl.getText());
            pst.setString(3, ((JTextField)txt_birthdate_empl.getDateEditor().getUiComponent()).getText());
            pst.setString(4, txt_gender_empl.getText());
            pst.setString(5, txt_maritalstatus_empl.getText());
            pst.setString(6, txt_salariedflag_empl.getText());
            pst.setString(7, txt_hometown_empl.getText());
            pst.setString(8, ((JTextField)txt_enrolltime_empl.getDateEditor().getUiComponent()).getText());
            pst.setString(9, txt_position_empl.getText());
            pst.setString(10, dashboard.lable_user.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một thông tin khách hàng mới vừa được thêm vào!");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_table_employee();
    }//GEN-LAST:event_cmd_saveActionPerformed

    private void cmd_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_deleteActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa dữ liệu Nhân viên này không?", "Delete Class", JOptionPane.YES_NO_OPTION);
        if (p==0){
            try{
                String sql="DELETE FROM Employee where code_empl = ?";
                pst=conn.prepareStatement(sql);
                pst.setString(1, txt_code_empl.getText());
                pst.execute();
            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        }

        Update_table_employee();
    }//GEN-LAST:event_cmd_deleteActionPerformed

    private void cmd_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_updateActionPerformed
        try{
            String code_empl = txt_code_empl.getText();
            String name_empl = txt_name_empl.getText();
            String birthdate_empl = ((JTextField)txt_birthdate_empl.getDateEditor().getUiComponent()).getText();
            String gender_empl = txt_gender_empl.getText();
            String maritalstatus_empl = txt_maritalstatus_empl.getText();
            String salariedflag_empl = txt_salariedflag_empl.getText();
            String hometown_empl = txt_hometown_empl.getText();
            String enrolltime_empl = ((JTextField)txt_enrolltime_empl.getDateEditor().getUiComponent()).getText();
            String position_empl = txt_position_empl.getText();
            String user_empl = dashboard.lable_user.getText();

            String sql ="UPDATE Employee SET name_empl = '"+name_empl+"', birthdate_empl = '"+birthdate_empl+"', "
            + "gender_empl = '"+gender_empl+"', maritalstatus_empl = '"+maritalstatus_empl+"', salariedflag_empl = '"+salariedflag_empl+"', "
            + "hometown_empl = '"+hometown_empl+"' , enrolltime_empl = '"+enrolltime_empl+"', position_empl = '"+position_empl+"', "
            + "user_empl = '"+user_empl+"' WHERE code_empl ='"+code_empl+"'  ";
            pst=conn.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một thông tin Nhân viên vừa được cập nhật !");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_table_employee();
    }//GEN-LAST:event_cmd_updateActionPerformed

    private void txt_position_emplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_position_emplActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_position_emplActionPerformed

    private void tbl_employeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_employeeMouseClicked
        try{
        int row=tbl_employee.getSelectedRow();
        String Table_click=(tbl_employee.getModel().getValueAt(row, 0).toString());
            
            String sql="SELECT *  FROM Employee WHERE Employee.code_empl ='"+Table_click+"'   ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            
            if(rs.next()){
                String code_empl =rs.getString("code_empl"); txt_code_empl.setText(code_empl);
                String name_empl =rs.getString("name_empl"); txt_name_empl.setText(name_empl); 
                
                String birthdate_empl =rs.getString("birthdate_empl");
                java.util.Date brdate = new SimpleDateFormat("yyyy-MM-dd").parse(birthdate_empl);
                txt_birthdate_empl.setDate(brdate);
                
                String gender_empl =rs.getString("gender_empl"); txt_gender_empl.setText(gender_empl); 
                String maritalstatus_empl =rs.getString("maritalstatus_empl"); txt_maritalstatus_empl.setText(maritalstatus_empl); 
                String salariedflag_empl =rs.getString("salariedflag_empl"); txt_salariedflag_empl.setText(salariedflag_empl); 
                String hometown_empl =rs.getString("hometown_empl"); txt_hometown_empl.setText(hometown_empl);
                
                String enrolltime_empl =rs.getString("enrolltime_empl");
                java.util.Date erdate = new SimpleDateFormat("yyyy-MM-dd").parse(enrolltime_empl);
                txt_enrolltime_empl.setDate(erdate); 
                
                String position_empl =rs.getString("position_empl"); txt_position_empl.setText(position_empl);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }//GEN-LAST:event_tbl_employeeMouseClicked

    private void menu_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_closeActionPerformed
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_menu_closeActionPerformed

    private void menu_refreshtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_refreshtableActionPerformed
        Update_table_employee();
    }//GEN-LAST:event_menu_refreshtableActionPerformed

    private void menu_export_xlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_xlsActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export Employee to .xls file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
            if(f.exists()) {
                int p =JOptionPane.showConfirmDialog(null, "File này đã có! Bạn có muốn ghi đè lên file này k?", "Over-write", JOptionPane.YES_NO_OPTION);
                if (p==1){
                return;
                }
            }

                Workbook wb = new HSSFWorkbook();
                Sheet personSheet = wb.createSheet("employee");
                //create font style
                HSSFFont font = (HSSFFont) wb.createFont();
                font.setColor(HSSFFont.COLOR_RED);
                font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
                font.setFontHeightInPoints((short) 24);
                HSSFCellStyle cellStyle= (HSSFCellStyle) wb.createCellStyle();
                cellStyle.setFont(font);
                //
                Row titlerow = personSheet.createRow(0);
                titlerow.setHeightInPoints((short) 26);
                Cell nametitle = titlerow.createCell(0);
                nametitle.setCellStyle(cellStyle);
                nametitle.setCellValue("Danh Sách Nhân Viên");


                Row headerRow = personSheet.createRow(1);
                    Cell code_cust = headerRow.createCell(0); code_cust.setCellValue("Employee ID");
                    Cell name_cust = headerRow.createCell(1); name_cust.setCellValue("Name");
                    Cell add_cust = headerRow.createCell(2); add_cust.setCellValue("Birthdate");
                    Cell district_cust = headerRow.createCell(3); district_cust.setCellValue("Gender");
                    Cell province_cust = headerRow.createCell(4); province_cust.setCellValue("Marital status");
                    Cell company_cust = headerRow.createCell(5); company_cust.setCellValue("Salaried flag");
                    Cell phone_cust = headerRow.createCell(6); phone_cust.setCellValue("Hometown");
                    Cell fax_cust = headerRow.createCell(7); fax_cust.setCellValue("Enroll time");
                    Cell email_cust = headerRow.createCell(8); email_cust.setCellValue("Position");

                try{
                String sql = "SELECT code_empl, name_empl, birthdate_empl, gender_empl,"
                        + " maritalstatus_empl, salariedflag_empl, hometown_empl, enrolltime_empl,"
                        + " position_empl FROM employee ORDER BY code_empl ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery(); 

                int row = 2;
                while(rs.next()) {
                    Row dataRow = personSheet.createRow(row);

                    Cell code_custCell = dataRow.createCell(0);
                        code_custCell.setCellValue(rs.getString("code_empl"));
                    Cell name_custCell = dataRow.createCell(1);
                        name_custCell.setCellValue(rs.getString("name_empl"));
                    Cell add_custCell = dataRow.createCell(2);
                        add_custCell.setCellValue(rs.getString("birthdate_empl"));
                    Cell district_custCell = dataRow.createCell(3);
                        district_custCell.setCellValue(rs.getString("gender_empl"));
                    Cell province_custCell = dataRow.createCell(4);
                        province_custCell.setCellValue(rs.getString("maritalstatus_empl"));
                    Cell company_custCell = dataRow.createCell(5);
                        company_custCell.setCellValue(rs.getString("salariedflag_empl"));
                    Cell phone_custCell = dataRow.createCell(6);
                        phone_custCell.setCellValue(rs.getString("hometown_empl"));
                    Cell fax_custCell = dataRow.createCell(7);
                        fax_custCell.setCellValue(rs.getString("enrolltime_empl"));
                    Cell email_custCell = dataRow.createCell(8);
                        email_custCell.setCellValue(rs.getString("position_empl"));

                    row = row + 1;
                }


                FileOutputStream fileOut = new FileOutputStream(outputDirPath);
                wb.write(fileOut);
                fileOut.close();
                JOptionPane.showMessageDialog(null, "Danh sách Nhân viên đã được xuất tới " + outputDirPath);
                } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally { try { rs.close(); pst.close();}catch (Exception e){  } }
        }
    }//GEN-LAST:event_menu_export_xlsActionPerformed

    private void menu_export_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_csvActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export table EMPLOYEE to .csv file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
        if(f.exists()) {
            int p =JOptionPane.showConfirmDialog(null, "File đã có! Bạn có muốn ghi đè lên file này?", "Over-write", JOptionPane.YES_NO_OPTION);
            if (p==1){
            return;
            }
        }
            try{
            FileWriter fw = new FileWriter(outputDirPath);
            String sql = " SELECT * FROM employee ORDER BY code_empl ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery(); 

            while(rs.next()) {
                fw.append('"'); fw.append(rs.getString("code_empl")); fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("name_empl"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("birthdate_empl"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("gender_empl"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("maritalstatus_empl"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("salariedflag_empl"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("hometown_empl"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("enrolltime_empl"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("position_empl"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("user_empl"));fw.append('"'); fw.append('\n');
            }
            fw.flush();
            fw.close();
            
            JOptionPane.showMessageDialog(null, "Dữ liệu nhân viên đã được xuất tới " + outputDirPath);
            } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        
        }
    }//GEN-LAST:event_menu_export_csvActionPerformed

    private void menu_import_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_import_csvActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn import danh sách Nhân viên?", "Import Employee", JOptionPane.YES_NO_OPTION);
        if (p==0){
        try{
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String filename1 = f.getAbsolutePath();
            
            BufferedReader br = new BufferedReader(new FileReader(filename1));
            String line;

            while((line = br.readLine())!=null){
                line = line.substring(1, line.length() - 1);
                line=line.replace("null", "");
                String[] value= line.split("\",\""); //seperator \",\"
                //System.out.println(value[1]); code_empl, name_empl, birthdate_empl, gender_empl,"
                        //+ " maritalstatus_empl, salariedflag_empl, hometown_empl, enrolltime_empl,"
                        ///+ " position_empl
                String sql = "INSERT INTO employee (code_empl, name_empl, birthdate_empl, gender_empl, "
                        + "maritalstatus_empl, salariedflag_empl, hometown_empl, enrolltime_empl, "
                        + "position_empl, user_empl) "
                        + "values ('"+value[0]+"', '"+value[1]+"', '"+value[2]+"', "
                        + "'"+value[3]+"', '"+value[4]+"', '"+value[5]+"', '"+value[6]+"', "
                        + "'"+value[7]+"', '"+value[8]+"', '"+value[9]+"')";
                pst=conn.prepareStatement(sql);
                pst.executeUpdate();
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            }
            br.close();
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}
        }

        Update_table_employee();
    }//GEN-LAST:event_menu_import_csvActionPerformed

    private void menu_deleteallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_deleteallActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa hết dữ liệu?", "Delete EMPLOYEE", JOptionPane.YES_NO_OPTION);
        if (p==0){
        try{
            String sql="DELETE FROM employee";
            pst=conn.prepareStatement(sql);
            pst.execute();
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}
        }
        Update_table_employee();
    }//GEN-LAST:event_menu_deleteallActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employee_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employee_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employee_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employee_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new employee_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_addnew;
    private javax.swing.JButton cmd_close;
    private javax.swing.JButton cmd_delete;
    private javax.swing.JButton cmd_save;
    private javax.swing.JButton cmd_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menu_close;
    private javax.swing.JMenuItem menu_deleteall;
    private javax.swing.JMenuItem menu_export_csv;
    private javax.swing.JMenuItem menu_export_xls;
    private javax.swing.JMenuItem menu_import_csv;
    private javax.swing.JMenuItem menu_refreshtable;
    private javax.swing.JTable tbl_employee;
    private com.toedter.calendar.JDateChooser txt_birthdate_empl;
    private javax.swing.JTextField txt_code_empl;
    private com.toedter.calendar.JDateChooser txt_enrolltime_empl;
    private javax.swing.JTextField txt_gender_empl;
    private javax.swing.JTextField txt_hometown_empl;
    private javax.swing.JTextField txt_maritalstatus_empl;
    private javax.swing.JTextField txt_name_empl;
    private javax.swing.JTextField txt_position_empl;
    private javax.swing.JTextField txt_salariedflag_empl;
    // End of variables declaration//GEN-END:variables
}
