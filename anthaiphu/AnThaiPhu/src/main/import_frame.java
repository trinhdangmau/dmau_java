/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Cursor;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static main.function.MCH;
import static main.function.lc2;
import net.proteanit.sql.DbUtils;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.ss.usermodel.*;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author dmautrinh
 */
public class import_frame extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs =null;
    PreparedStatement pst =null;
    ResultSet rs2 =null;
    PreparedStatement pst2 =null;
    /**
     * Creates new form import_frame
     */
    public import_frame() {
        initComponents();
        conn=javaconnect.ConnecrDb();
        Fildcombo_name_part();
        Fildcombo_name_empl();
        setIcon();
    }

    private void setIcon() {
        String purl = lc2();
        String Url = purl+"/database/logo90.png";
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(Url));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmd_close = new javax.swing.JButton();
        cmd_print = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cmd_add_dt = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_code_im = new javax.swing.JTextField();
        txt_code_part = new javax.swing.JTextField();
        lable_total = new javax.swing.JLabel();
        txt_date_im = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        combo_name_part = new javax.swing.JComboBox();
        cmd_check = new javax.swing.JButton();
        txt_phone_part = new javax.swing.JTextField();
        txt_total_text_im = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lable_no_product = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_code_empl_im = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmd_refresh_dt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_import_detail = new javax.swing.JTable();
        combo_name_empl = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmd_delete_dt = new javax.swing.JButton();
        txt_tax_im = new javax.swing.JTextField();
        txt_note_im = new javax.swing.JTextField();
        txt_add_part = new javax.swing.JTextField();
        cmd_look_im = new javax.swing.JButton();
        txt_total_im = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_paid_im = new javax.swing.JTextField();
        txt_own_im = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_monetize_imdt = new javax.swing.JTextField();
        txt_unit_imdt = new javax.swing.JTextField();
        txt_specification_imdt = new javax.swing.JTextField();
        txt_no_imdt = new javax.swing.JTextField();
        combo_name_prod = new javax.swing.JComboBox();
        txt_code_imdt = new javax.swing.JTextField();
        txt_weight_imdt = new javax.swing.JTextField();
        txt_price_imdt = new javax.swing.JTextField();
        cmd_save_dt = new javax.swing.JButton();
        cmd_save_dt1 = new javax.swing.JButton();
        cmd_addnew = new javax.swing.JButton();
        cmd_save = new javax.swing.JButton();
        cmd_update = new javax.swing.JButton();
        cmd_delete = new javax.swing.JButton();
        txt_code_prod_imdt = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_close = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        menu_export_xls = new javax.swing.JMenuItem();
        menu_export_csv = new javax.swing.JMenuItem();
        menu_import_csv = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        menu_open_sp = new javax.swing.JMenuItem();
        menu_deleteall = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Nhập Hàng");

        cmd_close.setText("Đóng");
        cmd_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_closeActionPerformed(evt);
            }
        });

        cmd_print.setText("In");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(200, 63, 6));
        jLabel12.setText("Biểu mẫu nhập hàng");

        cmd_add_dt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_add_dt.setText(" Thêm mới");
        cmd_add_dt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_add_dtActionPerformed(evt);
            }
        });

        jLabel13.setText("Tax (%) :");

        jLabel14.setText("Nhân viên xuất :");

        jLabel3.setText("Địa chỉ :");

        lable_total.setText("+(total)");

        txt_date_im.setDateFormatString("yyyy-MM-dd");

        jLabel7.setText("Tổng (vnd) :");

        jLabel4.setText("Số điện thoại :");

        combo_name_part.setEditable(true);
        combo_name_part.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_name_partPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        cmd_check.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_check.setText("Thanh toán");
        cmd_check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_checkActionPerformed(evt);
            }
        });

        jLabel10.setText("Còn nợ :");

        lable_no_product.setText("+(no. )");

        jLabel11.setText("ID : ");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel6.setText("Ghi chú :");

        jLabel5.setText("Ngày xuất :");

        cmd_refresh_dt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_refresh_dt.setText("Refresh");
        cmd_refresh_dt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_refresh_dtActionPerformed(evt);
            }
        });

        tbl_import_detail.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbl_import_detail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_import_detail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_import_detailMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_import_detail);

        combo_name_empl.setEditable(true);
        combo_name_empl.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        combo_name_empl.setSelectedIndex(-1);
        combo_name_empl.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_name_emplPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel15.setText("Mã NV : ");

        jLabel9.setText("Đã thanh toán :");

        jLabel8.setText("Bằng chữ :");

        cmd_delete_dt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_delete_dt.setText("Xóa sp");
        cmd_delete_dt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_delete_dtActionPerformed(evt);
            }
        });

        txt_note_im.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_note_imActionPerformed(evt);
            }
        });

        cmd_look_im.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database/look-icon_2-512.png"))); // NOI18N
        cmd_look_im.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_look_imActionPerformed(evt);
            }
        });

        jLabel2.setText("Tên đối tác :");

        txt_paid_im.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_paid_imFocusGained(evt);
            }
        });

        txt_own_im.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_own_imFocusGained(evt);
            }
        });

        jLabel1.setText("Mã phiếu xuất :");

        jLabel17.setText("Tổng :");

        txt_monetize_imdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_monetize_imdtFocusGained(evt);
            }
        });

        txt_unit_imdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_unit_imdtFocusGained(evt);
            }
        });

        txt_specification_imdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_specification_imdtFocusGained(evt);
            }
        });

        txt_no_imdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_no_imdtFocusGained(evt);
            }
        });

        combo_name_prod.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_name_prodPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        txt_code_imdt.setToolTipText("Mã xuất SP");

        txt_weight_imdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_weight_imdtFocusGained(evt);
            }
        });

        txt_price_imdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_price_imdtFocusGained(evt);
            }
        });

        cmd_save_dt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_save_dt.setText("Lưu");
        cmd_save_dt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_save_dtActionPerformed(evt);
            }
        });

        cmd_save_dt1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_save_dt1.setText("Cập nhật");
        cmd_save_dt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_save_dt1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_paid_im, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_own_im))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_total_im, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_tax_im))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(combo_name_empl, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_code_empl_im, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_total_text_im)))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_code_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_name_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmd_add_dt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmd_save_dt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_specification_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_no_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_weight_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_unit_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_price_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmd_save_dt1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmd_delete_dt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmd_refresh_dt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmd_check)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lable_no_product, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)
                                .addGap(16, 16, 16)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lable_total, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_monetize_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_code_im)
                            .addComponent(combo_name_part, 0, 224, Short.MAX_VALUE)
                            .addComponent(txt_add_part)
                            .addComponent(txt_date_im, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmd_look_im)
                                .addGap(2, 2, 2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_note_im)
                                    .addComponent(txt_phone_part)
                                    .addComponent(txt_code_part))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txt_code_im, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmd_look_im, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combo_name_part, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_code_part, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_add_part, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txt_phone_part, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_date_im, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txt_note_im, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_code_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_name_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_specification_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_no_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_weight_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_unit_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_price_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_monetize_imdt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lable_no_product)
                    .addComponent(cmd_add_dt)
                    .addComponent(cmd_delete_dt)
                    .addComponent(cmd_refresh_dt)
                    .addComponent(cmd_check)
                    .addComponent(lable_total)
                    .addComponent(jLabel17)
                    .addComponent(cmd_save_dt)
                    .addComponent(cmd_save_dt1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_total_im, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txt_tax_im, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_total_text_im, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_paid_im, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_own_im, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(combo_name_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txt_code_empl_im, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cmd_addnew.setText("Tạo mới");
        cmd_addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_addnewActionPerformed(evt);
            }
        });

        cmd_save.setText("Lưu");
        cmd_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_saveActionPerformed(evt);
            }
        });

        cmd_update.setText("Update");
        cmd_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_updateActionPerformed(evt);
            }
        });

        cmd_delete.setText("Xóa");
        cmd_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_deleteActionPerformed(evt);
            }
        });

        txt_code_prod_imdt.setText("+maSP");

        jMenu1.setText("File");

        menu_close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menu_close.setText("Close");
        menu_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_closeActionPerformed(evt);
            }
        });
        jMenu1.add(menu_close);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Tools");

        menu_export_xls.setText("Export to .xls");
        menu_export_xls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_xlsActionPerformed(evt);
            }
        });
        jMenu3.add(menu_export_xls);

        menu_export_csv.setText("Export to .csv");
        menu_export_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_csvActionPerformed(evt);
            }
        });
        jMenu3.add(menu_export_csv);

        menu_import_csv.setText("Import from .csv");
        menu_import_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_import_csvActionPerformed(evt);
            }
        });
        jMenu3.add(menu_import_csv);

        jMenuBar1.add(jMenu3);

        jMenu5.setText("Advance");

        menu_open_sp.setText("Mở chi tiết SP");
        menu_open_sp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_open_spActionPerformed(evt);
            }
        });
        jMenu5.add(menu_open_sp);

        menu_deleteall.setText("Delete All");
        jMenu5.add(menu_deleteall);

        jMenuBar1.add(jMenu5);

        jMenu4.setText("Help");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(cmd_addnew, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_save, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_update, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_print, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_close, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_code_prod_imdt, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmd_addnew)
                    .addComponent(cmd_save)
                    .addComponent(cmd_update)
                    .addComponent(cmd_delete)
                    .addComponent(cmd_close)
                    .addComponent(cmd_print)
                    .addComponent(txt_code_prod_imdt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Fildcombo_name_part(){
    combo_name_part.removeAllItems();
    try {
    String sql ="SELECT name_part FROM partner ORDER BY name_part ";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    //combo_genus.addItem("");
    combo_name_part.setEditable(true);
    while(rs.next()){
        String name =rs.getString("name_part");
        combo_name_part.addItem(name);}
        AutoCompleteDecorator.decorate(this.combo_name_part);
    }
    catch (Exception e){JOptionPane.showMessageDialog(null, e);}
    finally {try {rs.close();pst.close();}catch (Exception e){}}
}

private void Fildcombo_name_empl(){
    combo_name_empl.removeAllItems();
    try {
    String sql ="SELECT name_empl FROM Employee ORDER BY name_empl ";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    //combo_genus.addItem("");
    combo_name_empl.setEditable(true);
    while(rs.next()){
        String name_empl =rs.getString("name_empl");
        combo_name_empl.addItem(name_empl);}
        AutoCompleteDecorator.decorate(this.combo_name_empl);
    }
    catch (Exception e){JOptionPane.showMessageDialog(null, e);}
    finally {try {rs.close();pst.close();}catch (Exception e){}}
}

public void check_close(){
        String temp= (String)txt_code_im.getText();
        if(temp.isEmpty()){dispose();return;}
        try{
            String check = "SELECT count(code_im) FROM import_tb WHERE code_im = '"+temp+"'";
            
            pst=conn.prepareStatement(check);
            rs=pst.executeQuery();

            if (rs.next()){
                final int count = rs.getInt(1);
                if (count < 1){
                    check_exdt();
                }
            }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}
        //try {rs.close();pst.close();}catch (Exception e){};
}

public void check_exdt(){
        String temp= (String)txt_code_im.getText();
        String check_exdt = "SELECT count(code_im_imdt) FROM import_detail WHERE code_im_imdt = '"+temp+"'";
        try{
            pst2=conn.prepareStatement(check_exdt);
            rs2=pst2.executeQuery();
            if(rs2.next()){
                final int count2 = rs2.getInt(1);
                if (count2 > 0){
                    int p =JOptionPane.showConfirmDialog(null, "Phiếu nhập chưa được lưu ! \nBạn cần xóa hết SP trong bảng trên?", "Noop inform", JOptionPane.YES_NO_OPTION);
                    if (p==0){
                        try{
                            String sql="DELETE FROM import_detail where code_im_imdt = ?";
                            pst=conn.prepareStatement(sql);
                            pst.setString(1, txt_code_im.getText());
                            pst.execute();
                        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                        finally {try {pst.close();}catch (Exception e){}}
                    }
                }
            }
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs2.close();pst2.close();}catch (Exception e){}}
    }

public void Update_tbl_import_detail(){
    String tmp = txt_code_im.getText().toUpperCase();
    try{
        String sql = "SELECT code_imdt AS 'ID', name_prod AS 'Tên SP', specification_imdt AS 'Quy cách',"
                + "no_imdt AS 'No.', weight_imdt AS 'Trọng lượng', unit_imdt AS 'Đơn vị', price_imdt AS 'Đơn giá', monetize_imdt AS 'Thành tiền' "
                + "FROM import_detail "
                + "LEFT JOIN product_information ON import_detail.code_prod_imdt = product_information.code_prod "
                + "WHERE code_im_imdt = '"+tmp+"' ";
        pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        tbl_import_detail.setModel(DbUtils.resultSetToTableModel(rs));
        tbl_import_detail.getColumnModel().getColumn(3).setPreferredWidth(12);
        tbl_import_detail.getColumnModel().getColumn(1).setPreferredWidth(30);
        tbl_import_detail.getColumnModel().getColumn(5).setPreferredWidth(12);
                }
        catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close(); pst.close();}catch (Exception e){}}
    
    try {
        String sql1="SELECT count(code_imdt) FROM import_detail WHERE code_im_imdt ='"+tmp+"' ";
           pst =conn.prepareStatement(sql1);
           rs =pst.executeQuery();
           
           if (rs.next()){
               String count = rs.getString("count(code_imdt)");
               lable_no_product.setText("No. :"+count);
           }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e); }
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }

private void Fildcombo_name_prod(){
        combo_name_prod.removeAllItems();
        try {
        String sql ="SELECT name_prod FROM product_information ORDER BY name_prod ";
        pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        combo_name_prod.setEditable(true);
        while(rs.next()){
            String name =rs.getString("name_prod");
            combo_name_prod.addItem(name);}
            AutoCompleteDecorator.decorate(this.combo_name_prod);
        }
        catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}
    }

    private void cmd_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_closeActionPerformed
        check_close();
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_cmd_closeActionPerformed

    private void cmd_add_dtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_add_dtActionPerformed
        add_dt();
    }//GEN-LAST:event_cmd_add_dtActionPerformed

    private void add_dt(){
    String sql = "SELECT * FROM import_detail ORDER BY code_imdt DESC LIMIT 1";
        try {
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            String mch = MCH();
            if(rs.next()){
                String code_part =rs.getString("code_imdt").substring(6);
                int code = Integer.parseInt(code_part);
                String code_up = Integer.toString(code+1);
                int n = 12 - 6 - code_up.length();
                String zero = new String(new char[n]).replace("\0", "0");
                String code_2 = "IMDT"+ mch+zero + code_up;
                txt_code_imdt.setText(code_2);
            }else{
                txt_code_imdt.setText("IMDT"+mch+"000001");
            }
        } catch (Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }

        Fildcombo_name_prod();

        txt_code_prod_imdt.setText("");
        txt_specification_imdt.setText("");
        txt_no_imdt.setText("0");
        txt_weight_imdt.setText("0");
        txt_unit_imdt.setText("kg");
        txt_price_imdt.setText("0");
        txt_monetize_imdt.setText("0");
        combo_name_prod.setSelectedItem("");
        combo_name_prod.requestFocusInWindow();
    }
    
    private void combo_name_partPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_name_partPopupMenuWillBecomeInvisible
        String temp= (String)combo_name_part.getSelectedItem();
        //kiem tra neu locality chua ton tai thi hoi xem co them locality khong
        if(temp.isEmpty()){return;}
        String check = "SELECT count(name_part) FROM partner WHERE name_part = '"+temp+"'";
        try{
            pst=conn.prepareStatement(check);
            rs=pst.executeQuery();
            if (rs.next()){
                final int count = rs.getInt(1);
                if (count < 1){
                    int p =JOptionPane.showConfirmDialog(null, "Tên đối tác không tồn tại ! \nBạn có muốn tạo mới đối tác hàng này?", "Noop inform", JOptionPane.YES_NO_OPTION);
                    if (p==0){
                        new partner_frame().setVisible(true);
                    }
                }
            }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e);
        }finally {try {rs.close();pst.close();}catch (Exception e){}}

        //gan species id toi txt
        try{
            String sql="SELECT * FROM partner WHERE partner.name_part ='"+temp+"' ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String code_part =rs.getString("code_part");
                txt_code_part.setText(code_part);
                String company_part =rs.getString("company_part");
                String add_part =rs.getString("add_part");
                String district_part =rs.getString("district_part");
                String province_part =rs.getString("province_part");
                txt_add_part.setText(company_part+"-"+add_part+", "+district_part+", "+province_part);
                String phone_part =rs.getString("phone_part");
                txt_phone_part.setText(phone_part);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }

        txt_date_im.requestFocusInWindow();
    }//GEN-LAST:event_combo_name_partPopupMenuWillBecomeInvisible

    private void cmd_checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_checkActionPerformed
        String tmp = txt_code_im.getText().toUpperCase();
        try {
            String sql1="SELECT sum(monetize_imdt) FROM import_detail WHERE code_im_imdt ='"+tmp+"' ";
            pst =conn.prepareStatement(sql1);
            rs =pst.executeQuery();

            if (rs.next()){
                String sum = rs.getString("sum(monetize_imdt)");
                lable_total.setText(sum);

                long tax = Long.parseLong(txt_tax_im.getText());
                long sum2 = Long.parseLong(sum);
                String total_im = Long.toString(sum2 + (sum2*tax/100));
                txt_total_im.setText(total_im);
                txt_total_text_im.requestFocusInWindow();
                ///
                long number = Long.parseLong(total_im);
                String text = (convertnumbertostring.convert(number));
                String out = Character.toString(text.charAt(0)).toUpperCase()+text.substring(1);
                txt_total_text_im.setText(out);
            }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e); }
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }//GEN-LAST:event_cmd_checkActionPerformed

    private void cmd_refresh_dtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_refresh_dtActionPerformed
        Update_tbl_import_detail();
    }//GEN-LAST:event_cmd_refresh_dtActionPerformed

    private void combo_name_emplPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_name_emplPopupMenuWillBecomeInvisible
        String temp= (String)combo_name_empl.getSelectedItem();
        //kiem tra neu locality chua ton tai thi hoi xem co them locality khong
        if(temp.isEmpty()){return;}
        String check = "SELECT count(name_empl) FROM employee WHERE name_empl = '"+temp+"'";
        try{
            pst=conn.prepareStatement(check);
            rs=pst.executeQuery();
            if (rs.next()){
                final int count = rs.getInt(1);
                if (count < 1){
                    int p =JOptionPane.showConfirmDialog(null, "Tên Nhân Viên không tồn tại ! \nBạn có muốn tạo mới tên khách hàng này?", "Noop inform", JOptionPane.YES_NO_OPTION);
                    if (p==0){
                        new employee_frame().setVisible(true);
                    }
                }
            }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e);
        }finally {try {rs.close();pst.close();}catch (Exception e){}}

        //gan species id toi txt
        try{
            String sql="SELECT * FROM employee WHERE employee.name_empl ='"+temp+"' ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String code_empl =rs.getString("code_empl");
                txt_code_empl_im.setText(code_empl);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }

        txt_code_empl_im.requestFocusInWindow();
    }//GEN-LAST:event_combo_name_emplPopupMenuWillBecomeInvisible

    private void cmd_delete_dtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_delete_dtActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa dữ liệu SP này không?", "Delete SP", JOptionPane.YES_NO_OPTION);
        if (p==0){
            try{
                String sql="DELETE FROM export_detail where code_imdt = ?";
                int row=tbl_import_detail.getSelectedRow();
                String code_exdt =(tbl_import_detail.getModel().getValueAt(row, 0).toString());
                pst=conn.prepareStatement(sql);
                pst.setString(1, code_exdt);
                pst.execute();
            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        }

        Update_tbl_import_detail();
    }//GEN-LAST:event_cmd_delete_dtActionPerformed

    private void txt_note_imActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_note_imActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_note_imActionPerformed

    private void cmd_look_imActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_look_imActionPerformed
        String tmp = txt_code_im.getText().toUpperCase();
        try{

            String sql = "SELECT * FROM import_tb INNER JOIN partner ON code_cust_im = code_part "
            + "INNER JOIN employee ON code_empl_im = code_empl WHERE code_im ='"+tmp+"' ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                
                txt_note_im.setText((String)rs.getString("note_im"));
                txt_total_im.setText((String)rs.getString("total_im"));
                txt_total_text_im.setText((String)rs.getString("total_text_im"));
                txt_paid_im.setText((String)rs.getString("paid_im"));
                txt_own_im.setText((String)rs.getString("own_im"));

                txt_code_part.setText((String)rs.getString("code_part"));
                String company_part =rs.getString("company_part");
                String add_part =rs.getString("add_part");
                String district_part =rs.getString("district_part");
                String province_part =rs.getString("province_part");
                txt_add_part.setText(company_part+"-"+add_part+", "+district_part+", "+province_part);
                txt_phone_part.setText(rs.getString("phone_part"));
                combo_name_part.setSelectedItem(rs.getString("name_part"));

                combo_name_empl.setSelectedItem(rs.getString("name_empl"));
                txt_code_empl_im.setText(rs.getString("code_empl"));
                
                String date_im = rs.getString("date_im");
                java.util.Date date = new SimpleDateFormat("yyyy-MM-dd").parse(date_im);
                txt_date_im.setDate(date);
            }
            Update_tbl_import_detail();
        }
        catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close(); pst.close();}catch (Exception e){}}
    }//GEN-LAST:event_cmd_look_imActionPerformed

    private void txt_paid_imFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_paid_imFocusGained
        txt_paid_im.selectAll();
    }//GEN-LAST:event_txt_paid_imFocusGained

    private void txt_own_imFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_own_imFocusGained
        long total_im = Long.parseLong(txt_total_im.getText());
        long paid_im = Long.parseLong(txt_paid_im.getText());
        String own_im = Long.toString(total_im - paid_im);
        txt_own_im.setText(own_im);
    }//GEN-LAST:event_txt_own_imFocusGained

    private void cmd_addnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_addnewActionPerformed
        String sql = "SELECT * FROM import_tb ORDER BY code_im DESC LIMIT 1";
        try {
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            int year = Calendar.getInstance().get(Calendar.YEAR); String year2 = Integer.toString(year);
            String mch = MCH();
            if(rs.next()){
                String code_part =rs.getString("code_im").substring(6);
                int code = Integer.parseInt(code_part);
                String code_up = Integer.toString(code+1);
                int n = 11 - 6 - code_up.length();
                String zero = new String(new char[n]).replace("\0", "0");
                String code_2 = "IM"+ year2.substring(2)+mch+zero + code_up;
                txt_code_im.setText(code_2);
            }else{
                String tem = "IM"+year2.substring(2)+mch+"00001";
                txt_code_im.setText(tem);
            }
        } catch (Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }

        Fildcombo_name_part();
        Fildcombo_name_empl();
        Update_tbl_import_detail();

        txt_add_part.setText("");
        txt_code_part.setText("");
        txt_date_im.setDate(null);
        txt_phone_part.setText("");
        txt_note_im.setText("0");
        txt_paid_im.setText("0");
        txt_total_im.setText("0");
        txt_total_text_im.setText("");
        txt_own_im.setText("0");
        txt_tax_im.setText("10");
        combo_name_part.setSelectedItem("");
        combo_name_empl.setSelectedItem("");
        combo_name_part.requestFocusInWindow();
    }//GEN-LAST:event_cmd_addnewActionPerformed

    private void cmd_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_saveActionPerformed
        try{
            String sql ="INSERT INTO import_tb (code_im, code_cust_im, date_im, total_im, paid_im, "
            + "own_im, total_text_im, tax_im, code_empl_im, note_im, user_im) values (?,?,?,?,?,?,?,?,?,?,?)";

            pst =conn.prepareStatement(sql);
            pst.setString(1, txt_code_im.getText());
            pst.setString(2, txt_code_part.getText());
            pst.setString(3, ((JTextField)txt_date_im.getDateEditor().getUiComponent()).getText());
            pst.setString(4, txt_total_im.getText());
            pst.setString(5, txt_paid_im.getText());
            pst.setString(6, txt_own_im.getText());
            pst.setString(7, txt_total_text_im.getText());
            pst.setString(8, txt_tax_im.getText());
            pst.setString(9, txt_code_empl_im.getText());
            pst.setString(10, txt_note_im.getText());
            pst.setString(11, dashboard.lable_user.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một Đơn hàng mới vừa được thêm vào!");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}
    }//GEN-LAST:event_cmd_saveActionPerformed

    private void cmd_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_updateActionPerformed
        try{
            String code_im = txt_code_im.getText();
            String code_cust_im = txt_code_part.getText();
            String date_im = ((JTextField)txt_date_im.getDateEditor().getUiComponent()).getText();
            String total_im = txt_total_im.getText();
            String paid_im = txt_paid_im.getText();
            String own_im = txt_own_im.getText();
            String total_text_im = txt_total_text_im.getText();
            String tax_im = txt_tax_im.getText();
            String code_empl_im = txt_code_empl_im.getText();
            String note_im = txt_note_im.getText();
            String user_im = dashboard.lable_user.getText();

            String sql ="UPDATE import_tb SET note_im = '"+note_im+"', code_cust_im = '"+code_cust_im+"', "
            + "date_im = '"+date_im+"', total_im = '"+total_im+"', paid_im = '"+paid_im+"', "
            + "own_im = '"+own_im+"' , total_text_im = '"+total_text_im+"', tax_im = '"+tax_im+"', "
            + "code_empl_im = '"+code_empl_im+"', user_im = '"+user_im+"' WHERE code_im ='"+code_im+"'  ";
            pst=conn.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một Đơn hàng vừa được cập nhật !");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}
    }//GEN-LAST:event_cmd_updateActionPerformed

    private void cmd_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_deleteActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa dữ liệu Đơn Hàng này không? \nDữ liệu sản phẩm trong đơn hàng sẻ được xóa theo", "Xóa Đơn hàng", JOptionPane.YES_NO_OPTION);
        if (p==0){
            try{
                String sql="DELETE FROM import_detail where code_im_imdt = ?";
                pst=conn.prepareStatement(sql);
                pst.setString(1, txt_code_im.getText());
                pst.execute();
            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}

            try{
                String sql="DELETE FROM import_tb where code_im = ?";
                pst=conn.prepareStatement(sql);
                pst.setString(1, txt_code_im.getText());
                pst.execute();
            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        }
    }//GEN-LAST:event_cmd_deleteActionPerformed

    private void menu_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_closeActionPerformed
        check_close();
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_menu_closeActionPerformed

    private void menu_export_xlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_xlsActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export import_list to .xls file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
            if(f.exists()) {
                int p =JOptionPane.showConfirmDialog(null, "File này đã có! Bạn có muốn ghi đè lên file này k?", "Over-write", JOptionPane.YES_NO_OPTION);
                if (p==1){
                    return;
                }
            }

            Workbook wb = new HSSFWorkbook();
            Sheet personSheet = wb.createSheet("Import");
            //create font style
            HSSFFont font = (HSSFFont) wb.createFont();
            font.setColor(HSSFFont.COLOR_RED);
            font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
            font.setFontHeightInPoints((short) 24);
            HSSFCellStyle cellStyle= (HSSFCellStyle) wb.createCellStyle();
            cellStyle.setFont(font);
            //
            Row titlerow = personSheet.createRow(0);
            titlerow.setHeightInPoints((short) 26);
            Cell nametitle = titlerow.createCell(0);
            nametitle.setCellStyle(cellStyle);
            nametitle.setCellValue("Danh Sách Xuất");

            Row headerRow = personSheet.createRow(1);
            Cell code_ex = headerRow.createCell(0); code_ex.setCellValue("Import ID");
            Cell code_cust = headerRow.createCell(1); code_cust.setCellValue("Partner ID");
            Cell date_ex = headerRow.createCell(2); date_ex.setCellValue("Date");
            Cell tax_ex = headerRow.createCell(3); tax_ex.setCellValue("Tax");
            Cell total_ex = headerRow.createCell(4); total_ex.setCellValue("Total");
            Cell paid_ex = headerRow.createCell(5); paid_ex.setCellValue("Paid");
            Cell own_ex = headerRow.createCell(6); own_ex.setCellValue("Own");
            Cell code_empl = headerRow.createCell(7); code_empl.setCellValue("Employee ID");
            Cell Note = headerRow.createCell(8); Note.setCellValue("Note");

            try{
                String sql = "SELECT * FROM import_tb ORDER BY code_im ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();

                int row = 2;
                while(rs.next()) {
                    Row dataRow = personSheet.createRow(row);

                    Cell code_prodCell = dataRow.createCell(0);
                    code_prodCell.setCellValue(rs.getString("code_im"));
                    Cell name_prodCell = dataRow.createCell(1);
                    name_prodCell.setCellValue(rs.getString("code_cust_im"));
                    Cell add_custCell = dataRow.createCell(2);
                    add_custCell.setCellValue(rs.getString("date_im"));
                    Cell district_custCell = dataRow.createCell(3);
                    district_custCell.setCellValue(rs.getString("tax_im"));
                    Cell province_custCell = dataRow.createCell(4);
                    province_custCell.setCellValue(rs.getString("total_im"));
                    Cell company_custCell = dataRow.createCell(5);
                    company_custCell.setCellValue(rs.getString("paid_im"));
                    Cell phone_custCell = dataRow.createCell(6);
                    phone_custCell.setCellValue(rs.getString("own_im"));
                    Cell fax_custCell = dataRow.createCell(7);
                    fax_custCell.setCellValue(rs.getString("code_empl_im"));
                    Cell note_exCell = dataRow.createCell(8);
                    note_exCell.setCellValue(rs.getString("note_im"));

                    row = row + 1;
                }

                FileOutputStream fileOut = new FileOutputStream(outputDirPath);
                wb.write(fileOut);
                fileOut.close();
                JOptionPane.showMessageDialog(null, "Danh sách Xuất đã được xuất tới " + outputDirPath);
            } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
        }
    }//GEN-LAST:event_menu_export_xlsActionPerformed

    private void menu_export_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_csvActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export table IMPORT to .csv file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
            if(f.exists()) {
                int p =JOptionPane.showConfirmDialog(null, "File đã có! Bạn có muốn ghi đè lên file này?", "Over-write", JOptionPane.YES_NO_OPTION);
                if (p==1){
                    return;
                }
            }
            try{
                FileWriter fw = new FileWriter(outputDirPath);
                String sql = " SELECT * FROM import_tb ORDER BY code_im";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();

                while(rs.next()) {
                    fw.append('"'); fw.append(rs.getString("code_im")); fw.append('"'); fw.append(',');
                    fw.append('"');fw.append(rs.getString("code_cust_im"));fw.append('"'); fw.append(',');
                    fw.append('"');fw.append(rs.getString("date_im"));fw.append('"'); fw.append(',');
                    fw.append('"');fw.append(rs.getString("tax_im"));fw.append('"'); fw.append(',');
                    fw.append('"');fw.append(rs.getString("total_im"));fw.append('"'); fw.append(',');
                    fw.append('"');fw.append(rs.getString("paid_im"));fw.append('"'); fw.append(',');
                    fw.append('"');fw.append(rs.getString("own_im"));fw.append('"'); fw.append(',');
                    fw.append('"');fw.append(rs.getString("total_text_im"));fw.append('"'); fw.append(',');
                    fw.append('"');fw.append(rs.getString("code_empl_im"));fw.append('"'); fw.append(',');
                    fw.append('"');fw.append(rs.getString("note_im"));fw.append('"'); fw.append(',');
                    fw.append('"');fw.append(rs.getString("user_im"));fw.append('"'); fw.append('\n');
                }
                fw.flush();
                fw.close();

                JOptionPane.showMessageDialog(null, "Dữ liệu Phiếu Xuất đã được xuất tới " + outputDirPath);
            } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}

        }
    }//GEN-LAST:event_menu_export_csvActionPerformed

    private void menu_import_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_import_csvActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn import danh sách Nhap?", "Import IMPORT", JOptionPane.YES_NO_OPTION);
        if (p==0){
            try{
                JFileChooser chooser = new JFileChooser();
                chooser.showOpenDialog(null);
                File f = chooser.getSelectedFile();
                String filename1 = f.getAbsolutePath();

                BufferedReader br = new BufferedReader(new FileReader(filename1));
                String line;

                while((line = br.readLine())!=null){
                    line = line.substring(1, line.length() - 1);
                    line=line.replace("null", "");
                    String[] value= line.split("\",\""); //seperator \",\"
                    String sql = "INSERT INTO import_tb (code_im, code_cust_im, date_im, tax_im,"
                    + " total_im, paid_im, own_im, total_text_im, code_empl_im, note_im, user_im) "
                    + "values ('"+value[0]+"', '"+value[1]+"', '"+value[2]+"', "
                    + "'"+value[3]+"', '"+value[4]+"', '"+value[5]+"', '"+value[6]+"', "
                    + "'"+value[7]+"', '"+value[8]+"', '"+value[9]+"', '"+value[10]+"')";
                    pst=conn.prepareStatement(sql);
                    pst.executeUpdate();
                    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                }
                br.close();
                this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        }
    }//GEN-LAST:event_menu_import_csvActionPerformed

    private void txt_monetize_imdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_monetize_imdtFocusGained
        double price_exdt = Double.parseDouble(txt_price_imdt.getText());
        double weight_exdt = Double.parseDouble(txt_weight_imdt.getText());
        double monetize = (double)price_exdt * (double)weight_exdt;
        long j=Math.round(monetize);
        String z = Long.toString(j);
        txt_monetize_imdt.setText(z);
    }//GEN-LAST:event_txt_monetize_imdtFocusGained

    private void txt_unit_imdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_unit_imdtFocusGained
        txt_unit_imdt.selectAll();
    }//GEN-LAST:event_txt_unit_imdtFocusGained

    private void txt_specification_imdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_specification_imdtFocusGained
        txt_specification_imdt.selectAll();
    }//GEN-LAST:event_txt_specification_imdtFocusGained

    private void txt_no_imdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_no_imdtFocusGained
        txt_no_imdt.selectAll();
    }//GEN-LAST:event_txt_no_imdtFocusGained

    private void combo_name_prodPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_name_prodPopupMenuWillBecomeInvisible
        String temp= (String)combo_name_prod.getSelectedItem();

        if(temp.isEmpty()){return;}
        String check = "SELECT count(name_prod) FROM product_information WHERE name_prod = '"+temp+"'";
        try{
            pst=conn.prepareStatement(check);
            rs=pst.executeQuery();
            if (rs.next()){
                final int count = rs.getInt(1);
                if (count < 1){
                    int p =JOptionPane.showConfirmDialog(null, "Tên Sản phẩm không tồn tại ! Bạn có muốn tạo mới tên SP này?", "Noop inform", JOptionPane.YES_NO_OPTION);
                    if (p==0){
                        new product_frame().setVisible(true);
                    }else{combo_name_prod.setSelectedItem(null);}
                }
            }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e);
        }finally {try {rs.close();pst.close();}catch (Exception e){}}

        //gan species id toi txt
        try{
            String sql="SELECT * FROM product_information WHERE name_prod ='"+temp+"' ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String code_prod =rs.getString("code_prod");
                txt_code_prod_imdt.setText(code_prod);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }

        txt_specification_imdt.requestFocusInWindow();
    }//GEN-LAST:event_combo_name_prodPopupMenuWillBecomeInvisible

    private void txt_weight_imdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_weight_imdtFocusGained
        txt_weight_imdt.selectAll();
    }//GEN-LAST:event_txt_weight_imdtFocusGained

    private void txt_price_imdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_price_imdtFocusGained
        txt_price_imdt.selectAll();
    }//GEN-LAST:event_txt_price_imdtFocusGained

    private void cmd_save_dtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_save_dtActionPerformed
        try{
            String sql ="INSERT INTO import_detail (code_imdt, code_im_imdt, code_prod_imdt, specification_imdt, no_imdt, "
            + "weight_imdt, unit_imdt, monetize_imdt, price_imdt, user_imdt) values (?,?,?,?,?,?,?,?,?,?)";

            pst =conn.prepareStatement(sql);
            pst.setString(1, txt_code_imdt.getText());
            pst.setString(2, txt_code_im.getText());
            pst.setString(3, txt_code_prod_imdt.getText());
            pst.setString(4, txt_specification_imdt.getText());
            pst.setString(5, txt_no_imdt.getText());
            pst.setString(6, txt_weight_imdt.getText());
            pst.setString(7, txt_unit_imdt.getText());
            pst.setString(8, txt_monetize_imdt.getText());
            pst.setString(9, txt_price_imdt.getText());
            pst.setString(10, dashboard.lable_user.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một Sản phẩm mới vừa được thêm vào!");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_tbl_import_detail();
        add_dt();
    }//GEN-LAST:event_cmd_save_dtActionPerformed

    private void cmd_save_dt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_save_dt1ActionPerformed
        try{
            String code_imdt = txt_code_imdt.getText();
            String code_prod_imdt = txt_code_prod_imdt.getText();
            String specification_imdt = txt_specification_imdt.getText();
            String no_imdt = txt_no_imdt.getText();
            String weight_imdt = txt_weight_imdt.getText();
            String unit_imdt = txt_unit_imdt.getText();
            String monetize_imdt = txt_monetize_imdt.getText();
            String price_imdt = txt_price_imdt.getText();
            String user_imdt = dashboard.lable_user.getText();

            String sql ="UPDATE import_detail SET code_prod_imdt = '"+code_prod_imdt+"', specification_imdt = '"+specification_imdt+"', "
            + "no_imdt = '"+no_imdt+"', weight_imdt = '"+weight_imdt+"', unit_imdt = '"+unit_imdt+"', "
            + "monetize_imdt = '"+monetize_imdt+"' , price_imdt = '"+price_imdt+"', user_imdt = '"+user_imdt+"' WHERE code_imdt ='"+code_imdt+"'  ";
            pst=conn.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một thông SP vừa được cập nhật !");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_tbl_import_detail();
    }//GEN-LAST:event_cmd_save_dt1ActionPerformed

    private void menu_open_spActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_open_spActionPerformed
        import_detail_frame import_detal_form = new import_detail_frame();
        String code_im = txt_code_im.getText();
        import_detail_frame.txt_code_im_imdt.setText(code_im);
        import_detal_form.setVisible(true);
    }//GEN-LAST:event_menu_open_spActionPerformed

    private void tbl_import_detailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_import_detailMouseClicked
        try{
            int row=tbl_import_detail.getSelectedRow();
            String Table_click=(tbl_import_detail.getModel().getValueAt(row, 0).toString());

            String sql="SELECT *  FROM import_detail "
            + "LEFT JOIN product_information ON import_detail.code_prod_imdt = product_information.code_prod "
            + "WHERE import_detail.code_imdt ='"+Table_click+"'";

            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String code_imdt =rs.getString("code_imdt"); txt_code_imdt.setText(code_imdt);
                String code_prod_imdt =rs.getString("code_prod_imdt"); txt_code_prod_imdt.setText(code_prod_imdt);
                String specification_imdt =rs.getString("specification_imdt"); txt_specification_imdt.setText(specification_imdt);
                String name_prod =rs.getString("name_prod"); combo_name_prod.setSelectedItem(name_prod);
                String no_imdt =rs.getString("no_imdt"); txt_no_imdt.setText(no_imdt);
                String weight_imdt =rs.getString("weight_imdt"); txt_weight_imdt.setText(weight_imdt);
                String unit_imdt =rs.getString("unit_imdt"); txt_unit_imdt.setText(unit_imdt);
                String price_imdt =rs.getString("price_imdt"); txt_price_imdt.setText(price_imdt);
                String monetize_imdt =rs.getString("monetize_imdt"); txt_monetize_imdt.setText(monetize_imdt);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }//GEN-LAST:event_tbl_import_detailMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(import_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(import_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(import_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(import_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new import_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_add_dt;
    private javax.swing.JButton cmd_addnew;
    private javax.swing.JButton cmd_check;
    private javax.swing.JButton cmd_close;
    private javax.swing.JButton cmd_delete;
    private javax.swing.JButton cmd_delete_dt;
    private javax.swing.JButton cmd_look_im;
    private javax.swing.JButton cmd_print;
    private javax.swing.JButton cmd_refresh_dt;
    private javax.swing.JButton cmd_save;
    private javax.swing.JButton cmd_save_dt;
    private javax.swing.JButton cmd_save_dt1;
    private javax.swing.JButton cmd_update;
    private javax.swing.JComboBox combo_name_empl;
    private javax.swing.JComboBox combo_name_part;
    private javax.swing.JComboBox combo_name_prod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lable_no_product;
    private javax.swing.JLabel lable_total;
    private javax.swing.JMenuItem menu_close;
    private javax.swing.JMenuItem menu_deleteall;
    private javax.swing.JMenuItem menu_export_csv;
    private javax.swing.JMenuItem menu_export_xls;
    private javax.swing.JMenuItem menu_import_csv;
    private javax.swing.JMenuItem menu_open_sp;
    private javax.swing.JTable tbl_import_detail;
    private javax.swing.JTextField txt_add_part;
    private javax.swing.JTextField txt_code_empl_im;
    public static javax.swing.JTextField txt_code_im;
    private javax.swing.JTextField txt_code_imdt;
    private javax.swing.JTextField txt_code_part;
    private javax.swing.JLabel txt_code_prod_imdt;
    private com.toedter.calendar.JDateChooser txt_date_im;
    private javax.swing.JTextField txt_monetize_imdt;
    private javax.swing.JTextField txt_no_imdt;
    private javax.swing.JTextField txt_note_im;
    private javax.swing.JTextField txt_own_im;
    private javax.swing.JTextField txt_paid_im;
    private javax.swing.JTextField txt_phone_part;
    private javax.swing.JTextField txt_price_imdt;
    private javax.swing.JTextField txt_specification_imdt;
    private javax.swing.JTextField txt_tax_im;
    private javax.swing.JTextField txt_total_im;
    private javax.swing.JTextField txt_total_text_im;
    private javax.swing.JTextField txt_unit_imdt;
    private javax.swing.JTextField txt_weight_imdt;
    // End of variables declaration//GEN-END:variables
}
