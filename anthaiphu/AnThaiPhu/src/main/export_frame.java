/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Cursor;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static main.debt_cust_ind_frame.combo_month_ind;
import static main.debt_cust_ind_frame.combo_name_cust_ind;
import static main.debt_cust_ind_frame.combo_years_ind;
import static main.function.MCH;
import static main.function.debt_date;
import static main.function.fromdate;
import static main.function.lc2;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author trinhdangmau
 */
public class export_frame extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs =null;
    PreparedStatement pst =null;
    ResultSet rs2 =null;
    PreparedStatement pst2 =null;
    /**
     * Creates new form export_frame
     */
    public export_frame() {
        initComponents();
        conn=javaconnect.ConnecrDb();
        Fildcombo_name_cust();
        Fildcombo_name_empl();
        Fildcombo_name_prod();
        setIcon();
    }

    private void setIcon() {
        String purl = lc2();
        String Url = purl+"/database/logo90.png";
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(Url));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel16 = new javax.swing.JLabel();
        cmd_addnew = new javax.swing.JButton();
        cmd_save = new javax.swing.JButton();
        cmd_update = new javax.swing.JButton();
        cmd_delete = new javax.swing.JButton();
        cmd_close = new javax.swing.JButton();
        cmd_print = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cmd_add_dt = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_code_cust = new javax.swing.JTextField();
        lable_total = new javax.swing.JLabel();
        txt_date_ex = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        combo_name_cust = new javax.swing.JComboBox();
        cmd_check = new javax.swing.JButton();
        txt_phone_cust = new javax.swing.JTextField();
        txt_total_text_ex = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lable_no_product = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_code_empl_ex = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmd_refresh_dt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_export_detail = new javax.swing.JTable();
        combo_name_empl = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmd_delete_dt = new javax.swing.JButton();
        txt_tax_ex = new javax.swing.JTextField();
        txt_note_ex = new javax.swing.JTextField();
        txt_add_cust = new javax.swing.JTextField();
        cmd_look_ex = new javax.swing.JButton();
        txt_total_ex = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_paid_ex = new javax.swing.JTextField();
        txt_own_ex = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        cmd_pdate_dt = new javax.swing.JButton();
        cmd_save_dt = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txt_monetize_exdt = new javax.swing.JTextField();
        txt_unit_exdt = new javax.swing.JTextField();
        txt_specification_exdt = new javax.swing.JTextField();
        txt_no_exdt = new javax.swing.JTextField();
        combo_name_prod = new javax.swing.JComboBox();
        txt_code_exdt = new javax.swing.JTextField();
        txt_weight_exdt = new javax.swing.JTextField();
        txt_price_exdt = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        txt_code_prod_exdt = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_print = new javax.swing.JMenuItem();
        menu_close = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menu_export_xls = new javax.swing.JMenuItem();
        menu_export_csv = new javax.swing.JMenuItem();
        menu_import_csv = new javax.swing.JMenuItem();
        menu_open_detail = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        menu_deleteall = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jScrollPane2.setViewportView(jTextPane1);

        jLabel16.setText("jLabel16");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Biểu mẫu xuất hàng");

        cmd_addnew.setText("Tạo mới");
        cmd_addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_addnewActionPerformed(evt);
            }
        });

        cmd_save.setText("Lưu");
        cmd_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_saveActionPerformed(evt);
            }
        });

        cmd_update.setText("Cập nhật");
        cmd_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_updateActionPerformed(evt);
            }
        });

        cmd_delete.setText("Xóa");
        cmd_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_deleteActionPerformed(evt);
            }
        });

        cmd_close.setText("Đóng");
        cmd_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_closeActionPerformed(evt);
            }
        });

        cmd_print.setText("Print");
        cmd_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_printActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(200, 63, 6));
        jLabel12.setText("Biểu mẫu xuất hàng");

        cmd_add_dt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_add_dt.setText("Thêm mới");
        cmd_add_dt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_add_dtActionPerformed(evt);
            }
        });

        jLabel13.setText("Tax (%) :");

        jLabel14.setText("Nhân viên xuất :");

        jLabel3.setText("Địa chỉ :");

        lable_total.setText("+(total)");

        txt_date_ex.setDateFormatString("yyyy-MM-dd");

        jLabel7.setText("Tổng (vnd) :");

        jLabel4.setText("Phone:");

        combo_name_cust.setEditable(true);
        combo_name_cust.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_name_custPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        cmd_check.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_check.setText("Thanh toán");
        cmd_check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_checkActionPerformed(evt);
            }
        });

        jLabel10.setText("Còn nợ :");

        lable_no_product.setText("+(no. )");

        jLabel11.setText("ID : ");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel6.setText("Ghi chú :");

        jLabel5.setText("Ngày xuất :");

        cmd_refresh_dt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_refresh_dt.setText("Refresh");
        cmd_refresh_dt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_refresh_dtActionPerformed(evt);
            }
        });

        tbl_export_detail.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tbl_export_detail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_export_detail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_export_detailMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_export_detail);

        combo_name_empl.setEditable(true);
        combo_name_empl.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        combo_name_empl.setSelectedIndex(-1);
        combo_name_empl.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_name_emplPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel15.setText("Mã NV : ");

        jLabel9.setText("Đã thanh toán :");

        jLabel8.setText("Bằng chữ :");

        cmd_delete_dt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_delete_dt.setText("Xóa sp");
        cmd_delete_dt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_delete_dtActionPerformed(evt);
            }
        });

        txt_note_ex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_note_exActionPerformed(evt);
            }
        });

        cmd_look_ex.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database/look-icon_2-512.png"))); // NOI18N
        cmd_look_ex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_look_exActionPerformed(evt);
            }
        });

        jLabel2.setText("Tên khách hàng :");

        txt_paid_ex.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_paid_exFocusGained(evt);
            }
        });

        txt_own_ex.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_own_exFocusGained(evt);
            }
        });

        jLabel1.setText("Mã phiếu xuất :");

        jLabel17.setText("Tổng :");

        cmd_pdate_dt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_pdate_dt.setText("Cập nhật");
        cmd_pdate_dt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_pdate_dtActionPerformed(evt);
            }
        });

        cmd_save_dt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmd_save_dt.setText("Lưu");
        cmd_save_dt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_save_dtActionPerformed(evt);
            }
        });

        jPanel2.setPreferredSize(new java.awt.Dimension(707, 35));

        txt_monetize_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_monetize_exdtFocusGained(evt);
            }
        });

        txt_unit_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_unit_exdtFocusGained(evt);
            }
        });

        txt_specification_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_specification_exdtFocusGained(evt);
            }
        });

        txt_no_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_no_exdtFocusGained(evt);
            }
        });

        combo_name_prod.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_name_prodPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        txt_code_exdt.setToolTipText("Mã xuất SP");

        txt_weight_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_weight_exdtFocusGained(evt);
            }
        });

        txt_price_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_price_exdtFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(txt_code_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_name_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_specification_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_no_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_weight_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_unit_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_price_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_monetize_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_code_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_name_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_specification_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_no_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_weight_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_unit_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_price_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_monetize_exdt))
                .addGap(3, 3, 3))
        );

        txt_code_exdt.getAccessibleContext().setAccessibleName("khm");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(cmd_add_dt, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_save_dt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_pdate_dt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_delete_dt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_refresh_dt, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_check)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lable_no_product, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lable_total, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_total_text_ex, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_total_ex, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_tax_ex))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(combo_name_empl, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_paid_ex, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_own_ex)
                                    .addComponent(txt_code_empl_ex)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_code_ex, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(combo_name_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_add_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_date_ex, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_code_cust)
                                            .addComponent(txt_note_ex)
                                            .addComponent(txt_phone_cust, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)))
                                    .addComponent(cmd_look_ex, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txt_code_ex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmd_look_ex, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combo_name_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_code_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_add_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_phone_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_date_ex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_note_ex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmd_add_dt)
                        .addComponent(cmd_refresh_dt)
                        .addComponent(cmd_save_dt)
                        .addComponent(cmd_pdate_dt)
                        .addComponent(cmd_delete_dt)
                        .addComponent(cmd_check))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lable_total)
                        .addComponent(jLabel17)
                        .addComponent(lable_no_product)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_total_ex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txt_tax_ex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_total_text_ex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_paid_ex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_own_ex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(combo_name_empl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txt_code_empl_ex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        txt_code_prod_exdt.setText("+maSP");

        jMenu1.setText("File");

        menu_print.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        menu_print.setText("Print Preview");
        menu_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_printActionPerformed(evt);
            }
        });
        jMenu1.add(menu_print);

        menu_close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menu_close.setText("Close");
        menu_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_closeActionPerformed(evt);
            }
        });
        jMenu1.add(menu_close);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem2.setText("Làm mới chi tiết đơn hàng");
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Tools");

        menu_export_xls.setText("Export to .xls");
        menu_export_xls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_xlsActionPerformed(evt);
            }
        });
        jMenu3.add(menu_export_xls);

        menu_export_csv.setText("Export to .csv");
        menu_export_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_csvActionPerformed(evt);
            }
        });
        jMenu3.add(menu_export_csv);

        menu_import_csv.setText("Import from .csv");
        menu_import_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_import_csvActionPerformed(evt);
            }
        });
        jMenu3.add(menu_import_csv);

        jMenuBar1.add(jMenu3);

        menu_open_detail.setText("Advance");

        jMenuItem1.setText("Mở chi tiết sp đơn hàng");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menu_open_detail.add(jMenuItem1);

        menu_deleteall.setText("Delete All");
        menu_open_detail.add(menu_deleteall);

        jMenuBar1.add(menu_open_detail);

        jMenu4.setText("Help");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(jLabel12))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(cmd_addnew, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_save, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_update, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_print, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_close, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_code_prod_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmd_addnew)
                    .addComponent(cmd_save)
                    .addComponent(cmd_update)
                    .addComponent(cmd_delete)
                    .addComponent(cmd_close)
                    .addComponent(cmd_print)
                    .addComponent(txt_code_prod_exdt))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmd_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_closeActionPerformed
        check_close();
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_cmd_closeActionPerformed

    public void check_close(){
        String temp= (String)txt_code_ex.getText();
        if(temp.isEmpty()){dispose();return;}
        try{
            String check = "SELECT count(code_ex) FROM export WHERE code_ex = '"+temp+"'";
            
            pst=conn.prepareStatement(check);
            rs=pst.executeQuery();

            if (rs.next()){
                final int count = rs.getInt(1);
                if (count < 1){
                    check_exdt();
                }
            }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}
        //try {rs.close();pst.close();}catch (Exception e){};
    }
    
    public void check_exdt(){
        String temp= (String)txt_code_ex.getText();
        String check_exdt = "SELECT count(code_ex_exdt) FROM export_detail WHERE code_ex_exdt = '"+temp+"'";
        try{
            pst2=conn.prepareStatement(check_exdt);
            rs2=pst2.executeQuery();
            if(rs2.next()){
                final int count2 = rs2.getInt(1);
                if (count2 > 0){
                    int p =JOptionPane.showConfirmDialog(null, "Phiếu xuất chưa được lưu ! \nBạn cần xóa hết SP trong bảng trên?", "Noop inform", JOptionPane.YES_NO_OPTION);
                    if (p==0){
                        try{
                            String sql="DELETE FROM export_detail where code_ex_exdt = ?";
                            pst=conn.prepareStatement(sql);
                            pst.setString(1, txt_code_ex.getText());
                            pst.execute();
                        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                        finally {try {pst.close();}catch (Exception e){}}
                    }
                }
            }
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs2.close();pst2.close();}catch (Exception e){}}
    }
    
    public void Update_tbl_export_detail(){
    String tmp = txt_code_ex.getText().toUpperCase();
    try{
        String sql = "SELECT code_exdt AS 'ID', name_prod AS 'Tên SP', specification_exdt AS 'Quy cách',"
                + "no_exdt AS 'No.', weight_exdt AS 'Trọng lượng', unit_exdt AS 'Đơn vị', price_exdt AS 'Đơn giá',monetize_exdt AS 'Thành tiền' "
                + "FROM export_detail "
                + "LEFT JOIN product_information ON export_detail.code_prod_exdt = product_information.code_prod "
                + "WHERE code_ex_exdt = '"+tmp+"' ";
        pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        tbl_export_detail.setModel(DbUtils.resultSetToTableModel(rs));
        tbl_export_detail.getColumnModel().getColumn(3).setPreferredWidth(12);
        tbl_export_detail.getColumnModel().getColumn(1).setPreferredWidth(30);
        tbl_export_detail.getColumnModel().getColumn(5).setPreferredWidth(12);
                }
        catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close(); pst.close();}catch (Exception e){}}
    
    try {
        String sql1="SELECT count(code_exdt) FROM export_detail WHERE code_ex_exdt ='"+tmp+"' ";
           pst =conn.prepareStatement(sql1);
           rs =pst.executeQuery();
           
           if (rs.next()){
               String count = rs.getString("count(code_exdt)");
               lable_no_product.setText("No. :"+count);
           }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e); }
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }
    public void tbl_up(){
    Update_tbl_export_detail();
    }
    
private void Fildcombo_name_cust(){
    combo_name_cust.removeAllItems();
    try {
    String sql ="SELECT name_cust FROM customer ORDER BY name_cust ";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    //combo_genus.addItem("");
    combo_name_cust.setEditable(true);
    while(rs.next()){
        String name =rs.getString("name_cust");
        combo_name_cust.addItem(name);}
        AutoCompleteDecorator.decorate(this.combo_name_cust);
    }
    catch (Exception e){JOptionPane.showMessageDialog(null, e);}
    finally {try {rs.close();pst.close();}catch (Exception e){}}
}

private void Fildcombo_name_empl(){
    combo_name_empl.removeAllItems();
    try {
    String sql ="SELECT name_empl FROM employee ORDER BY name_empl ";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    //combo_genus.addItem("");
    combo_name_empl.setEditable(true);
    while(rs.next()){
        String name_empl =rs.getString("name_empl");
        combo_name_empl.addItem(name_empl);}
        AutoCompleteDecorator.decorate(this.combo_name_empl);
    }
    catch (Exception e){JOptionPane.showMessageDialog(null, e);}
    finally {try {rs.close();pst.close();}catch (Exception e){}}
}

private void Fildcombo_name_prod(){
    combo_name_prod.removeAllItems();
    try {
    String sql ="SELECT name_prod FROM product_information ORDER BY name_prod ";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    combo_name_prod.setEditable(true);
    while(rs.next()){
        String name =rs.getString("name_prod");
        combo_name_prod.addItem(name);}
        AutoCompleteDecorator.decorate(this.combo_name_prod);
    }
    catch (Exception e){JOptionPane.showMessageDialog(null, e);}
    finally {try {rs.close();pst.close();}catch (Exception e){}}
}
    
    private void cmd_addnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_addnewActionPerformed
        String sql = "SELECT * FROM export ORDER BY code_ex DESC LIMIT 1";
        try {
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            String mch = MCH();
            int year = Calendar.getInstance().get(Calendar.YEAR); String year2 = Integer.toString(year);
            if(rs.next()){
                String code_part =rs.getString("code_ex").substring(6);
                int code = Integer.parseInt(code_part);
                String code_up = Integer.toString(code+1);
                int n = 11 - 6 - code_up.length();
                String zero = new String(new char[n]).replace("\0", "0");
                String code_2 = "EX"+ year2.substring(2)+mch+zero + code_up;
                txt_code_ex.setText(code_2);
            }else{
                String tem = "EX"+ year2.substring(2)+mch+"00001";
                txt_code_ex.setText(tem);
            }
        } catch (Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }
        
        Fildcombo_name_cust();
        Fildcombo_name_empl();
        Update_tbl_export_detail();
        
        txt_add_cust.setText("");
        txt_code_cust.setText("");
        txt_date_ex.setDate(null);
        txt_phone_cust.setText("");
        txt_note_ex.setText("0");
        txt_paid_ex.setText("0");
        txt_total_ex.setText("0");
        txt_total_text_ex.setText("");
        txt_own_ex.setText("0");
        txt_tax_ex.setText("0");
        combo_name_cust.setSelectedItem("");
        combo_name_empl.setSelectedItem("");
        combo_name_cust.requestFocusInWindow();
    }//GEN-LAST:event_cmd_addnewActionPerformed

    private void cmd_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_saveActionPerformed
        try{
            String sql ="INSERT INTO export (code_ex, code_cust_ex, date_ex, total_ex, paid_ex, "
            + "own_ex, total_text_ex, tax_ex, code_empl_ex, note_ex, user_ex) values (?,?,?,?,?,?,?,?,?,?,?)";

            pst =conn.prepareStatement(sql);
            pst.setString(1, txt_code_ex.getText());
            pst.setString(2, txt_code_cust.getText());
            pst.setString(3, ((JTextField)txt_date_ex.getDateEditor().getUiComponent()).getText());
            pst.setString(4, txt_total_ex.getText());
            pst.setString(5, txt_paid_ex.getText());
            pst.setString(6, txt_own_ex.getText());
            pst.setString(7, txt_total_text_ex.getText());
            pst.setString(8, txt_tax_ex.getText());
            pst.setString(9, txt_code_empl_ex.getText());
            pst.setString(10, txt_note_ex.getText());
            pst.setString(11, dashboard.lable_user.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một Đơn hàng mới vừa được thêm vào!");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}
    }//GEN-LAST:event_cmd_saveActionPerformed
    
    private void cmd_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_updateActionPerformed
        try{
            String code_ex = txt_code_ex.getText();
            String code_cust_ex = txt_code_cust.getText();
            String date_ex = ((JTextField)txt_date_ex.getDateEditor().getUiComponent()).getText();
            String total_ex = txt_total_ex.getText();
            String paid_ex = txt_paid_ex.getText();
            String own_ex = txt_own_ex.getText();
            String total_text_ex = txt_total_text_ex.getText();
            String tax_ex = txt_tax_ex.getText();
            String code_empl_ex = txt_code_empl_ex.getText();
            String note_ex = txt_note_ex.getText();
            String user_ex = dashboard.lable_user.getText();

            String sql ="UPDATE export SET note_ex = '"+note_ex+"', code_cust_ex = '"+code_cust_ex+"', "
            + "date_ex = '"+date_ex+"', total_ex = '"+total_ex+"', paid_ex = '"+paid_ex+"', "
            + "own_ex = '"+own_ex+"' , total_text_ex = '"+total_text_ex+"', tax_ex = '"+tax_ex+"', "
                    + "code_empl_ex = '"+code_empl_ex+"', user_ex = '"+user_ex+"' WHERE code_ex ='"+code_ex+"'  ";
            pst=conn.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một Đơn hàng vừa được cập nhật !");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}
    }//GEN-LAST:event_cmd_updateActionPerformed

    private void cmd_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_deleteActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa dữ liệu Đơn Hàng này không? \nDữ liệu sản phẩm trong đơn hàng sẻ được xóa theo", "Xóa Đơn hàng", JOptionPane.YES_NO_OPTION);
        if (p==0){
            try{
                String sql="DELETE FROM export_detail where code_ex_exdt = ?";
                pst=conn.prepareStatement(sql);
                pst.setString(1, txt_code_ex.getText());
                pst.execute();
            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
            
            try{
                String sql="DELETE FROM export where code_ex = ?";
                pst=conn.prepareStatement(sql);
                pst.setString(1, txt_code_ex.getText());
                pst.execute();
            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        }        
    }//GEN-LAST:event_cmd_deleteActionPerformed

    private void menu_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_closeActionPerformed
        check_close();
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_menu_closeActionPerformed

    private void menu_export_xlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_xlsActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export Export_list to .xls file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
            if(f.exists()) {
                int p =JOptionPane.showConfirmDialog(null, "File này đã có! Bạn có muốn ghi đè lên file này k?", "Over-write", JOptionPane.YES_NO_OPTION);
                if (p==1){
                return;
                }
            }

                Workbook wb = new HSSFWorkbook();
                Sheet personSheet = wb.createSheet("export");
                //create font style
                HSSFFont font = (HSSFFont) wb.createFont();
                font.setColor(HSSFFont.COLOR_RED);
                font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
                font.setFontHeightInPoints((short) 24);
                HSSFCellStyle cellStyle= (HSSFCellStyle) wb.createCellStyle();
                cellStyle.setFont(font);
                //
                Row titlerow = personSheet.createRow(0);
                titlerow.setHeightInPoints((short) 26);
                Cell nametitle = titlerow.createCell(0);
                nametitle.setCellStyle(cellStyle);
                nametitle.setCellValue("Danh Sách Xuất");


                Row headerRow = personSheet.createRow(1);
                    Cell code_ex = headerRow.createCell(0); code_ex.setCellValue("Export ID");
                    Cell code_cust = headerRow.createCell(1); code_cust.setCellValue("Customer ID");
                    Cell date_ex = headerRow.createCell(2); date_ex.setCellValue("Date");
                    Cell tax_ex = headerRow.createCell(3); tax_ex.setCellValue("Tax");
                    Cell total_ex = headerRow.createCell(4); total_ex.setCellValue("Total");
                    Cell paid_ex = headerRow.createCell(5); paid_ex.setCellValue("Paid");
                    Cell own_ex = headerRow.createCell(6); own_ex.setCellValue("Own");
                    Cell code_empl = headerRow.createCell(7); code_empl.setCellValue("Employee ID");
                    Cell Note = headerRow.createCell(8); Note.setCellValue("Note");

                try{
                String sql = "SELECT * FROM export ORDER BY code_ex ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery(); 

                int row = 2;
                while(rs.next()) {
                    Row dataRow = personSheet.createRow(row);

                    Cell code_prodCell = dataRow.createCell(0);
                        code_prodCell.setCellValue(rs.getString("code_ex"));
                    Cell name_prodCell = dataRow.createCell(1);
                        name_prodCell.setCellValue(rs.getString("code_cust_ex"));
                    Cell add_custCell = dataRow.createCell(2);
                        add_custCell.setCellValue(rs.getString("date_ex"));
                    Cell district_custCell = dataRow.createCell(3);
                        district_custCell.setCellValue(rs.getString("tax_ex"));
                    Cell province_custCell = dataRow.createCell(4);
                        province_custCell.setCellValue(rs.getString("total_ex"));
                    Cell company_custCell = dataRow.createCell(5);
                        company_custCell.setCellValue(rs.getString("paid_ex"));
                    Cell phone_custCell = dataRow.createCell(6);
                        phone_custCell.setCellValue(rs.getString("own_ex"));
                    Cell fax_custCell = dataRow.createCell(7);
                        fax_custCell.setCellValue(rs.getString("code_empl_ex"));
                    Cell note_exCell = dataRow.createCell(8);
                    note_exCell.setCellValue(rs.getString("note_ex"));

                    row = row + 1;
                }


                FileOutputStream fileOut = new FileOutputStream(outputDirPath);
                wb.write(fileOut);
                fileOut.close();
                JOptionPane.showMessageDialog(null, "Danh sách Xuất đã được xuất tới " + outputDirPath);
                } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally { try { rs.close(); pst.close();}catch (Exception e){  } }
        }
    }//GEN-LAST:event_menu_export_xlsActionPerformed

    private void menu_export_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_csvActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export table EXPORT to .csv file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
        if(f.exists()) {
            int p =JOptionPane.showConfirmDialog(null, "File đã có! Bạn có muốn ghi đè lên file này?", "Over-write", JOptionPane.YES_NO_OPTION);
            if (p==1){
            return;
            }
        }
            try{
            FileWriter fw = new FileWriter(outputDirPath);
            String sql = " SELECT * FROM export ORDER BY code_ex";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery(); 

            while(rs.next()) {
                fw.append('"'); fw.append(rs.getString("code_ex")); fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("code_cust_ex"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("date_ex"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("tax_ex"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("total_ex"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("paid_ex"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("own_ex"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("total_text_ex"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("code_empl_ex"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("note_ex"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("user_ex"));fw.append('"'); fw.append('\n');
            }
            fw.flush();
            fw.close();
            
            JOptionPane.showMessageDialog(null, "Dữ liệu Phiếu Xuất đã được xuất tới " + outputDirPath);
            } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        
        }
    }//GEN-LAST:event_menu_export_csvActionPerformed

    private void menu_import_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_import_csvActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn import danh sách Xuất?", "Import EXPORT", JOptionPane.YES_NO_OPTION);
        if (p==0){
        try{
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String filename1 = f.getAbsolutePath();
            
            BufferedReader br = new BufferedReader(new FileReader(filename1));
            String line;

            while((line = br.readLine())!=null){
                line = line.substring(1, line.length() - 1);
                line=line.replace("null", "");
                String[] value= line.split("\",\""); //seperator \",\"
                String sql = "INSERT INTO export (code_ex, code_cust_ex, date_ex, tax_ex,"
                        + " total_ex, paid_ex, own_ex, total_text_ex, code_empl_ex, note_ex, user_ex) "
                        + "values ('"+value[0]+"', '"+value[1]+"', '"+value[2]+"', "
                        + "'"+value[3]+"', '"+value[4]+"', '"+value[5]+"', '"+value[6]+"', "
                        + "'"+value[7]+"', '"+value[8]+"', '"+value[9]+"', '"+value[10]+"')";
                pst=conn.prepareStatement(sql);
                pst.executeUpdate();
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            }
            br.close();
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}
        }
    }//GEN-LAST:event_menu_import_csvActionPerformed

    private void cmd_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_printActionPerformed
        String code_ex = txt_code_ex.getText();
        try {
            JasperDesign jd=JRXmlLoader.load(getClass().getResourceAsStream("export_print.jrxml"));
            String sql = "SELECT * FROM export "
                    + "LEFT JOIN export_detail ON code_ex = code_ex_exdt "
                    + "LEFT JOIN customer ON code_cust = code_cust_ex "
                    + "LEFT JOIN product_information ON export_detail.code_prod_exdt = product_information.code_prod "
                    + "WHERE code_ex = '" + code_ex+"'";
        
            JRDesignQuery newQuery= new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            
            JasperReport jr=JasperCompileManager.compileReport(jd);
            JasperPrint jp=JasperFillManager.fillReport(jr, null, conn);
            //JasperViewer jv = new JasperViewer(jp,false);
            //jv.setVisible(true);
            JasperPrintManager.printReport(jp,true);
            
        } catch (JRException ex) {
            Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
        }finally {try {rs.close();pst.close();}catch (Exception e){}}
    }//GEN-LAST:event_cmd_printActionPerformed

    private void menu_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_printActionPerformed
        String code_ex = txt_code_ex.getText();
        try {
            JasperDesign jd=JRXmlLoader.load(getClass().getResourceAsStream("export.jrxml"));
            String sql = "SELECT * FROM export "
                    + "LEFT JOIN export_detail ON code_ex = code_ex_exdt "
                    + "LEFT JOIN customer ON code_cust = code_cust_ex "
                    + "LEFT JOIN product_information ON export_detail.code_prod_exdt = product_information.code_prod "
                    + "WHERE code_ex = '" + code_ex+"'";
            JRDesignQuery newQuery= new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            
            JasperReport jr=JasperCompileManager.compileReport(jd);
            JasperPrint jp=JasperFillManager.fillReport(jr, null, conn);
            JasperViewer jv = new JasperViewer(jp,false);
            jv.setVisible(true);
            //JasperPrintManager.printReport(jp,true);
            
        } catch (JRException ex) {
            Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
        }finally {try {rs.close();pst.close();}catch (Exception e){}}
    }//GEN-LAST:event_menu_printActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        export_detail_frame export_detal_form = new export_detail_frame();
        String code_ex = txt_code_ex.getText();
        export_detail_frame.txt_code_ex_exdt.setText(code_ex);
        export_detal_form.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void cmd_save_dtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_save_dtActionPerformed
        try{
            String sql ="INSERT INTO export_detail (code_exdt, code_ex_exdt, code_prod_exdt, specification_exdt, no_exdt, "
            + "weight_exdt, unit_exdt, monetize_exdt, price_exdt, user_exdt) values (?,?,?,?,?,?,?,?,?,?)";

            pst =conn.prepareStatement(sql);
            pst.setString(1, txt_code_exdt.getText());
            pst.setString(2, txt_code_ex.getText());
            pst.setString(3, txt_code_prod_exdt.getText());
            pst.setString(4, txt_specification_exdt.getText());
            pst.setString(5, txt_no_exdt.getText());
            pst.setString(6, txt_weight_exdt.getText());
            pst.setString(7, txt_unit_exdt.getText());
            pst.setString(8, txt_monetize_exdt.getText());
            pst.setString(9, txt_price_exdt.getText());
            pst.setString(10, dashboard.lable_user.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một Sản phẩm mới vừa được thêm vào!");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_tbl_export_detail();
        addnew_dt();
    }//GEN-LAST:event_cmd_save_dtActionPerformed

    private void cmd_pdate_dtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_pdate_dtActionPerformed
        try{
            String code_exdt = txt_code_exdt.getText();
            String code_prod_exdt = txt_code_prod_exdt.getText();
            String specification_exdt = txt_specification_exdt.getText();
            String no_exdt = txt_no_exdt.getText();
            String weight_exdt = txt_weight_exdt.getText();
            String unit_exdt = txt_unit_exdt.getText();
            String monetize_exdt = txt_monetize_exdt.getText();
            String price_exdt = txt_price_exdt.getText();
            String user_exdt = dashboard.lable_user.getText();

            String sql ="UPDATE export_detail SET code_prod_exdt = '"+code_prod_exdt+"', specification_exdt = '"+specification_exdt+"', "
            + "no_exdt = '"+no_exdt+"', weight_exdt = '"+weight_exdt+"', unit_exdt = '"+unit_exdt+"', "
            + "monetize_exdt = '"+monetize_exdt+"' , price_exdt = '"+price_exdt+"', user_exdt = '"+user_exdt+"' WHERE code_exdt ='"+code_exdt+"'  ";
            pst=conn.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một thông SP vừa được cập nhật !");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_tbl_export_detail();
    }//GEN-LAST:event_cmd_pdate_dtActionPerformed

    private void txt_monetize_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_monetize_exdtFocusGained

        double price_exdt = Double.parseDouble(txt_price_exdt.getText());
        double weight_exdt = Double.parseDouble(txt_weight_exdt.getText());
        double monetize = (double)price_exdt * (double)weight_exdt;
        long j=Math.round(monetize);
        String z = Long.toString(j);
        txt_monetize_exdt.setText(z);
    }//GEN-LAST:event_txt_monetize_exdtFocusGained

    private void txt_price_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_price_exdtFocusGained
        txt_price_exdt.selectAll();
    }//GEN-LAST:event_txt_price_exdtFocusGained

    private void txt_unit_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_unit_exdtFocusGained
        txt_unit_exdt.selectAll();
    }//GEN-LAST:event_txt_unit_exdtFocusGained

    private void txt_weight_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_weight_exdtFocusGained
        txt_weight_exdt.selectAll();
    }//GEN-LAST:event_txt_weight_exdtFocusGained

    private void txt_no_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_no_exdtFocusGained
        txt_no_exdt.selectAll();
    }//GEN-LAST:event_txt_no_exdtFocusGained

    private void txt_specification_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_specification_exdtFocusGained
        txt_specification_exdt.selectAll();
    }//GEN-LAST:event_txt_specification_exdtFocusGained

    private void txt_own_exFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_own_exFocusGained
        long total_ex = Long.parseLong(txt_total_ex.getText());
        long paid_ex = Long.parseLong(txt_paid_ex.getText());
        String own_ex = Long.toString(total_ex - paid_ex);
        txt_own_ex.setText(own_ex);
    }//GEN-LAST:event_txt_own_exFocusGained

    private void txt_paid_exFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_paid_exFocusGained
        txt_paid_ex.selectAll();
    }//GEN-LAST:event_txt_paid_exFocusGained

    private void cmd_look_exActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_look_exActionPerformed
        String tmp = txt_code_ex.getText().toUpperCase();
        try{

            String sql = "SELECT * FROM export INNER JOIN customer ON code_cust_ex = code_cust "
            + "INNER JOIN employee ON code_empl_ex = code_empl WHERE code_ex ='"+tmp+"' ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String date_ex = rs.getString("date_ex");
                java.util.Date date = new SimpleDateFormat("yyyy-MM-dd").parse(date_ex);
                txt_date_ex.setDate(date);
                txt_note_ex.setText((String)rs.getString("note_ex"));
                txt_total_ex.setText((String)rs.getString("total_ex"));
                txt_total_text_ex.setText((String)rs.getString("total_text_ex"));
                txt_paid_ex.setText((String)rs.getString("paid_ex"));
                txt_own_ex.setText((String)rs.getString("own_ex"));
                txt_tax_ex.setText((String)rs.getString("tax_ex"));

                txt_code_cust.setText((String)rs.getString("code_cust"));
                String company_cust =rs.getString("company_cust");
                String add_cust =rs.getString("add_cust");
                String district_cust =rs.getString("district_cust");
                String province_cust =rs.getString("province_cust");
                txt_add_cust.setText(company_cust+"-"+add_cust+", "+district_cust+", "+province_cust);
                txt_phone_cust.setText(rs.getString("phone_cust"));
                combo_name_cust.setSelectedItem(rs.getString("name_cust"));

                combo_name_empl.setSelectedItem(rs.getString("name_empl"));
                txt_code_empl_ex.setText(rs.getString("code_empl"));
            }
        }
        catch (SQLException | ParseException e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close(); pst.close();}catch (Exception e){}}
        Update_tbl_export_detail();
    }//GEN-LAST:event_cmd_look_exActionPerformed

    private void txt_note_exActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_note_exActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_note_exActionPerformed

    private void cmd_delete_dtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_delete_dtActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa dữ liệu SP này không?", "Delete SP", JOptionPane.YES_NO_OPTION);
        if (p==0){
            try{
                String sql="DELETE FROM export_detail where code_exdt = ?";
                int row=tbl_export_detail.getSelectedRow();
                String code_exdt =(tbl_export_detail.getModel().getValueAt(row, 0).toString());
                pst=conn.prepareStatement(sql);
                pst.setString(1, code_exdt);
                pst.execute();
            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        }

        Update_tbl_export_detail();
    }//GEN-LAST:event_cmd_delete_dtActionPerformed

    private void combo_name_emplPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_name_emplPopupMenuWillBecomeInvisible
        String temp= (String)combo_name_empl.getSelectedItem();
        //kiem tra neu locality chua ton tai thi hoi xem co them locality khong
        if(temp.isEmpty()){return;}
        String check = "SELECT count(name_empl) FROM employee WHERE name_empl = '"+temp+"'";
        try{
            pst=conn.prepareStatement(check);
            rs=pst.executeQuery();
            if (rs.next()){
                final int count = rs.getInt(1);
                if (count < 1){
                    int p =JOptionPane.showConfirmDialog(null, "Tên Nhân Viên không tồn tại ! \nBạn có muốn tạo mới tên khách hàng này?", "Noop inform", JOptionPane.YES_NO_OPTION);
                    if (p==0){
                        new employee_frame().setVisible(true);
                    }
                }
            }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e);
        }finally {try {rs.close();pst.close();}catch (Exception e){}}

        //gan species id toi txt
        try{
            String sql="SELECT * FROM employee WHERE employee.name_empl ='"+temp+"' ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String code_empl =rs.getString("code_empl");
                txt_code_empl_ex.setText(code_empl);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }

        txt_code_empl_ex.requestFocusInWindow();
    }//GEN-LAST:event_combo_name_emplPopupMenuWillBecomeInvisible

    private void tbl_export_detailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_export_detailMouseClicked
        try{
            int row=tbl_export_detail.getSelectedRow();
            String Table_click=(tbl_export_detail.getModel().getValueAt(row, 0).toString());

            String sql="SELECT *  FROM export_detail "
            + "LEFT JOIN product_information ON export_detail.code_prod_exdt = product_information.code_prod "
            + "WHERE export_detail.code_exdt ='"+Table_click+"'";

            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String code_exdt =rs.getString("code_exdt"); txt_code_exdt.setText(code_exdt);
                String code_prod_exdt =rs.getString("code_prod_exdt"); txt_code_prod_exdt.setText(code_prod_exdt);
                String specification_exdt =rs.getString("specification_exdt"); txt_specification_exdt.setText(specification_exdt);
                String name_prod =rs.getString("name_prod"); combo_name_prod.setSelectedItem(name_prod);
                String no_exdt =rs.getString("no_exdt"); txt_no_exdt.setText(no_exdt);
                String weight_exdt =rs.getString("weight_exdt"); txt_weight_exdt.setText(weight_exdt);
                String unit_exdt =rs.getString("unit_exdt"); txt_unit_exdt.setText(unit_exdt);
                String price_exdt =rs.getString("price_exdt"); txt_price_exdt.setText(price_exdt);
                String monetize_exdt =rs.getString("monetize_exdt"); txt_monetize_exdt.setText(monetize_exdt);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }//GEN-LAST:event_tbl_export_detailMouseClicked

    private void cmd_refresh_dtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_refresh_dtActionPerformed
        Update_tbl_export_detail();
    }//GEN-LAST:event_cmd_refresh_dtActionPerformed

    private void cmd_checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_checkActionPerformed
        String taxx = txt_tax_ex.getText();
        int p =JOptionPane.showConfirmDialog(null, "Xác nhận thanh toán với tax = "+taxx+"?", "Xác nhận thanh toán", JOptionPane.YES_NO_OPTION);
        if(p==0){
            try {
                String tmp = txt_code_ex.getText().toUpperCase();
                String sql1="SELECT sum(monetize_exdt) FROM export_detail WHERE code_ex_exdt ='"+tmp+"' ";
                pst =conn.prepareStatement(sql1);
                rs =pst.executeQuery();

                if (rs.next()){
                    String sum = rs.getString("sum(monetize_exdt)");
                    lable_total.setText(sum);

                    long tax = Long.parseLong(txt_tax_ex.getText());
                    long sum2 = Long.parseLong(sum);
                    String total_ex = Long.toString(sum2 + (sum2*tax/100));
                    txt_total_ex.setText(total_ex);
                    txt_total_text_ex.requestFocusInWindow();
                    ///
                    long number = Long.parseLong(total_ex);
                    String text = (convertnumbertostring.convert(number));
                    String out = Character.toString(text.charAt(0)).toUpperCase()+text.substring(1);
                    txt_total_text_ex.setText(out);
                }
            }catch (SQLException | NumberFormatException e){JOptionPane.showMessageDialog(null, e); }
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
        }else{
            txt_tax_ex.setText("");
            txt_tax_ex.requestFocusInWindow();
        }

    }//GEN-LAST:event_cmd_checkActionPerformed

    private void combo_name_custPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_name_custPopupMenuWillBecomeInvisible
        String temp= (String)combo_name_cust.getSelectedItem();
        //kiem tra neu locality chua ton tai thi hoi xem co them locality khong
        if(temp.isEmpty()){return;}
        String check = "SELECT count(name_cust) FROM customer WHERE name_cust = '"+temp+"'";
        try{
            pst=conn.prepareStatement(check);
            rs=pst.executeQuery();
            if (rs.next()){
                final int count = rs.getInt(1);
                if (count < 1){
                    int p =JOptionPane.showConfirmDialog(null, "Tên khách hàng không tồn tại ! \nBạn có muốn tạo mới tên khách hàng này?", "Noop inform", JOptionPane.YES_NO_OPTION);
                    if (p==0){
                        new add_customer_frame().setVisible(true);
                    }
                }
            }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e);
        }finally {try {rs.close();pst.close();}catch (Exception e){}}

        //gan species id toi txt
        try{
            String sql="SELECT * FROM customer WHERE customer.name_cust ='"+temp+"' ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String code_cust =rs.getString("code_cust");
                txt_code_cust.setText(code_cust);
                String company_cust =rs.getString("company_cust");
                String add_cust =rs.getString("add_cust");
                String district_cust =rs.getString("district_cust");
                String province_cust =rs.getString("province_cust");
                txt_add_cust.setText(company_cust+"-"+add_cust+", "+district_cust+", "+province_cust);
                String phone_cust =rs.getString("phone_cust");
                txt_phone_cust.setText(phone_cust);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }

        txt_date_ex.requestFocusInWindow();
    }//GEN-LAST:event_combo_name_custPopupMenuWillBecomeInvisible

    private void cmd_add_dtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_add_dtActionPerformed
        addnew_dt();
    }//GEN-LAST:event_cmd_add_dtActionPerformed

    private void combo_name_prodPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_name_prodPopupMenuWillBecomeInvisible
        String temp= (String)combo_name_prod.getSelectedItem();

        if(temp.isEmpty()){return;}
        String check = "SELECT count(name_prod) FROM product_information WHERE name_prod = '"+temp+"'";
        try{
        pst=conn.prepareStatement(check);
        rs=pst.executeQuery();
        if (rs.next()){
            final int count = rs.getInt(1);
            if (count < 1){
                int p =JOptionPane.showConfirmDialog(null, "Tên Sản phẩm không tồn tại ! Bạn có muốn tạo mới tên SP này?", "Noop inform", JOptionPane.YES_NO_OPTION);
                if (p==0){
                     new product_frame().setVisible(true);
                }else{combo_name_prod.setSelectedItem(null);}
            }
        }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e);
            }finally {try {rs.close();pst.close();}catch (Exception e){}}
        
        //gan species id toi txt   
        try{    
            String sql="SELECT * FROM product_information WHERE name_prod ='"+temp+"' ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();

                if(rs.next()){
                    String code_prod =rs.getString("code_prod");
                    txt_code_prod_exdt.setText(code_prod);
                }
            }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
                finally { try { rs.close(); pst.close();}catch (Exception e){  } }

        txt_specification_exdt.requestFocusInWindow();
    }//GEN-LAST:event_combo_name_prodPopupMenuWillBecomeInvisible

    private void addnew_dt(){
    String sql = "SELECT * FROM export_detail ORDER BY code_exdt DESC LIMIT 1";
        try {
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            String mch = MCH();
            if(rs.next()){
                String code_part =rs.getString("code_exdt").substring(6);
                int code = Integer.parseInt(code_part);
                String code_up = Integer.toString(code+1);
                int n = 12 - 6 - code_up.length();
                String zero = new String(new char[n]).replace("\0", "0");
                String code_2 = "EXDT"+mch +zero + code_up;
                txt_code_exdt.setText(code_2);
            }else{
                txt_code_exdt.setText("EXDT"+mch+"000001");
            }
        } catch (Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }

        Fildcombo_name_prod();

        txt_code_prod_exdt.setText("");
        txt_specification_exdt.setText("");
        txt_no_exdt.setText("0");
        txt_weight_exdt.setText("0");
        txt_unit_exdt.setText("kg");
        txt_price_exdt.setText("0");
        txt_monetize_exdt.setText("0");
        combo_name_prod.setSelectedItem("");
        combo_name_prod.requestFocusInWindow();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(export_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(export_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(export_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(export_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new export_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_add_dt;
    private javax.swing.JButton cmd_addnew;
    private javax.swing.JButton cmd_check;
    private javax.swing.JButton cmd_close;
    private javax.swing.JButton cmd_delete;
    private javax.swing.JButton cmd_delete_dt;
    private javax.swing.JButton cmd_look_ex;
    private javax.swing.JButton cmd_pdate_dt;
    private javax.swing.JButton cmd_print;
    private javax.swing.JButton cmd_refresh_dt;
    private javax.swing.JButton cmd_save;
    private javax.swing.JButton cmd_save_dt;
    private javax.swing.JButton cmd_update;
    private javax.swing.JComboBox combo_name_cust;
    private javax.swing.JComboBox combo_name_empl;
    private javax.swing.JComboBox combo_name_prod;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel lable_no_product;
    private javax.swing.JLabel lable_total;
    private javax.swing.JMenuItem menu_close;
    private javax.swing.JMenuItem menu_deleteall;
    private javax.swing.JMenuItem menu_export_csv;
    private javax.swing.JMenuItem menu_export_xls;
    private javax.swing.JMenuItem menu_import_csv;
    private javax.swing.JMenu menu_open_detail;
    private javax.swing.JMenuItem menu_print;
    private javax.swing.JTable tbl_export_detail;
    private javax.swing.JTextField txt_add_cust;
    private javax.swing.JTextField txt_code_cust;
    private javax.swing.JTextField txt_code_empl_ex;
    public static final javax.swing.JTextField txt_code_ex = new javax.swing.JTextField();
    private javax.swing.JTextField txt_code_exdt;
    private javax.swing.JLabel txt_code_prod_exdt;
    private com.toedter.calendar.JDateChooser txt_date_ex;
    private javax.swing.JTextField txt_monetize_exdt;
    private javax.swing.JTextField txt_no_exdt;
    private javax.swing.JTextField txt_note_ex;
    private javax.swing.JTextField txt_own_ex;
    private javax.swing.JTextField txt_paid_ex;
    private javax.swing.JTextField txt_phone_cust;
    private javax.swing.JTextField txt_price_exdt;
    private javax.swing.JTextField txt_specification_exdt;
    private javax.swing.JTextField txt_tax_ex;
    private javax.swing.JTextField txt_total_ex;
    private javax.swing.JTextField txt_total_text_ex;
    private javax.swing.JTextField txt_unit_exdt;
    private javax.swing.JTextField txt_weight_exdt;
    // End of variables declaration//GEN-END:variables

    /// txt complete
}

