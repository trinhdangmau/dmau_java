/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Cursor;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;
import static main.function.MCH;
import static main.function.lc2;
import net.proteanit.sql.DbUtils;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;


/**
 *
 * @author trinhdangmau
 */
public class export_detail_frame extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs =null;
    PreparedStatement pst =null;
    /**
     * Creates new form export_detail_frame
     */
    public export_detail_frame() {
        initComponents();
        conn=javaconnect.ConnecrDb();
        Update_tbl_nameproduct();
        Fildcombo_name_prod();
        setIcon();
    }

    private void setIcon() {
        String purl = lc2();
        String Url = purl+"/database/logo90.png";
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(Url));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmd_addnew = new javax.swing.JButton();
        cmd_save = new javax.swing.JButton();
        cmd_update = new javax.swing.JButton();
        cmd_delete = new javax.swing.JButton();
        cmd_close = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txt_code_prod_exdt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_monetize_exdt = new javax.swing.JTextField();
        txt_code_ex_exdt = new javax.swing.JTextField();
        txt_unit_exdt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        MaskFormatter mask = null;
        try {
            mask = new MaskFormatter("#,###");
        }catch (Exception e){
            e.printStackTrace();
        }
        txt_price_exdt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_weight_exdt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_specification_exdt = new javax.swing.JTextField();
        txt_no_exdt = new javax.swing.JTextField();
        txt_code_exdt = new javax.swing.JTextField();
        combo_name_prod = new javax.swing.JComboBox();
        cmd_look = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_nameproduct = new javax.swing.JTable();
        lable_noproduct = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_close = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menu_refresh_table = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menu_export_xls = new javax.swing.JMenuItem();
        menu_export_csv = new javax.swing.JMenuItem();
        menu_import_csv = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        menu_deleteall = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Xuất hàng chi tiết");

        cmd_addnew.setText("Thêm mới");
        cmd_addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_addnewActionPerformed(evt);
            }
        });

        cmd_save.setText("Lưu");
        cmd_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_saveActionPerformed(evt);
            }
        });

        cmd_update.setText("Update");
        cmd_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_updateActionPerformed(evt);
            }
        });

        cmd_delete.setText("Xóa");
        cmd_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_deleteActionPerformed(evt);
            }
        });

        cmd_close.setText("Đóng");
        cmd_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_closeActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã phiếu xuất :");

        txt_monetize_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_monetize_exdtFocusGained(evt);
            }
        });

        txt_unit_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_unit_exdtFocusGained(evt);
            }
        });

        jLabel5.setText("Số lượng :");

        txt_price_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_price_exdtFocusGained(evt);
            }
        });

        jLabel6.setText("Trọng lượng :");

        jLabel3.setText("Mã sản phẩm :");

        txt_weight_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_weight_exdtFocusGained(evt);
            }
        });

        jLabel11.setText("Tên sản phẩm");

        jLabel8.setText("Thành tiền :");

        jLabel2.setText("Mã xuất sản phẩm :");

        jLabel4.setText("Quy cách :");

        jLabel7.setText("Đơn vị :");

        jLabel9.setText("Đơn giá :");

        txt_specification_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_specification_exdtFocusGained(evt);
            }
        });
        txt_specification_exdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_specification_exdtActionPerformed(evt);
            }
        });

        txt_no_exdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_no_exdtFocusGained(evt);
            }
        });

        combo_name_prod.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_name_prodPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        cmd_look.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database/look-icon_2-512.png"))); // NOI18N
        cmd_look.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_lookActionPerformed(evt);
            }
        });

        tbl_nameproduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        tbl_nameproduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_nameproductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_nameproduct);

        lable_noproduct.setText("+(no.)");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setText("Thông tin xuất hàng chi tiết");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel11)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_price_exdt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_unit_exdt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_weight_exdt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_no_exdt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_specification_exdt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_code_prod_exdt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_name_prod, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_code_exdt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_code_ex_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmd_look))
                            .addComponent(txt_monetize_exdt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lable_noproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lable_noproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(txt_code_ex_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmd_look, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_code_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(combo_name_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_code_prod_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_specification_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_no_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_weight_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txt_unit_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txt_price_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txt_monetize_exdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        menu_close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menu_close.setText("Close");
        menu_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_closeActionPerformed(evt);
            }
        });
        jMenu1.add(menu_close);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        menu_refresh_table.setText("Refresh table");
        menu_refresh_table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_refresh_tableActionPerformed(evt);
            }
        });
        jMenu2.add(menu_refresh_table);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Tools");

        menu_export_xls.setText("Export to .xls");
        menu_export_xls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_xlsActionPerformed(evt);
            }
        });
        jMenu3.add(menu_export_xls);

        menu_export_csv.setText("Export to .csv");
        menu_export_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_export_csvActionPerformed(evt);
            }
        });
        jMenu3.add(menu_export_csv);

        menu_import_csv.setText("Import from .csv");
        menu_import_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_import_csvActionPerformed(evt);
            }
        });
        jMenu3.add(menu_import_csv);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Advance");

        menu_deleteall.setText("Delete All");
        menu_deleteall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_deleteallActionPerformed(evt);
            }
        });
        jMenu4.add(menu_deleteall);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Help");
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cmd_addnew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_close)
                        .addGap(93, 93, 93))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmd_addnew, cmd_close, cmd_delete, cmd_save, cmd_update});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmd_close)
                    .addComponent(cmd_addnew)
                    .addComponent(cmd_save)
                    .addComponent(cmd_update)
                    .addComponent(cmd_delete))
                .addGap(18, 18, 18))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmd_addnew, cmd_close, cmd_delete, cmd_save, cmd_update});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Update_tbl_nameproduct(){
    String tmp2 = export_frame.txt_code_ex.getText().toUpperCase();
    try{
        
        String sql = "SELECT code_exdt AS 'Mã SP', name_prod AS 'Tên SP', specification_exdt AS 'Quy cách' "
                + "FROM export_detail LEFT JOIN product_information ON export_detail.code_prod_exdt = product_information.code_prod "
                + "WHERE export_detail.code_ex_exdt ='"+tmp2+"'";
        pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        tbl_nameproduct.setModel(DbUtils.resultSetToTableModel(rs));
        tbl_nameproduct.getColumnModel().getColumn(0).setPreferredWidth(90);
                }
        catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close(); pst.close();}catch (Exception e){}}
    
    try {
        String sql1="SELECT count(code_exdt) FROM export_detail WHERE export_detail.code_ex_exdt ='"+tmp2+"' ";
           pst =conn.prepareStatement(sql1);
           rs =pst.executeQuery();
           
           if (rs.next()){
               String count = rs.getString("count(code_exdt)");
               lable_noproduct.setText("No.:"+count);
           }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e); }
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }
    
    private void txt_specification_exdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_specification_exdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_specification_exdtActionPerformed

    private void cmd_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_closeActionPerformed
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_cmd_closeActionPerformed

    private void tbl_nameproductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_nameproductMouseClicked
        try{
            int row=tbl_nameproduct.getSelectedRow();
            String Table_click=(tbl_nameproduct.getModel().getValueAt(row, 0).toString());

            String sql="SELECT *  FROM export_detail "
                    + "LEFT JOIN product_information ON export_detail.code_prod_exdt = product_information.code_prod "
                + "WHERE export_detail.code_exdt ='"+Table_click+"'";
            
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String code_exdt =rs.getString("code_exdt"); txt_code_exdt.setText(code_exdt);
                String code_prod_exdt =rs.getString("code_prod_exdt"); txt_code_prod_exdt.setText(code_prod_exdt);
                String specification_exdt =rs.getString("specification_exdt"); txt_specification_exdt.setText(specification_exdt);
                String name_prod =rs.getString("name_prod"); combo_name_prod.setSelectedItem(name_prod);
                String no_exdt =rs.getString("no_exdt"); txt_no_exdt.setText(no_exdt);
                String weight_exdt =rs.getString("weight_exdt"); txt_weight_exdt.setText(weight_exdt);
                String unit_exdt =rs.getString("unit_exdt"); txt_unit_exdt.setText(unit_exdt);
                String price_exdt =rs.getString("price_exdt"); txt_price_exdt.setText(price_exdt);
                String monetize_exdt =rs.getString("monetize_exdt"); txt_monetize_exdt.setText(monetize_exdt);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    }//GEN-LAST:event_tbl_nameproductMouseClicked

private void Fildcombo_name_prod(){
    combo_name_prod.removeAllItems();
    try {
    String sql ="SELECT name_prod FROM product_information ORDER BY name_prod ";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    combo_name_prod.setEditable(true);
    while(rs.next()){
        String name =rs.getString("name_prod");
        combo_name_prod.addItem(name);}
        AutoCompleteDecorator.decorate(this.combo_name_prod);
    }
    catch (Exception e){JOptionPane.showMessageDialog(null, e);}
    finally {try {rs.close();pst.close();}catch (Exception e){}}
}
    
    private void cmd_addnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_addnewActionPerformed
        
        String sql = "SELECT * FROM export_detail ORDER BY code_exdt DESC LIMIT 1";
        try {
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            String mch = MCH();
            if(rs.next()){
                String code_part =rs.getString("code_exdt").substring(6);
                int code = Integer.parseInt(code_part);
                String code_up = Integer.toString(code+1);
                int n = 12 - 6 - code_up.length();
                String zero = new String(new char[n]).replace("\0", "0");
                String code_2 = "EXDT"+mch +zero + code_up;
                txt_code_exdt.setText(code_2);
            }else{
                txt_code_exdt.setText("EXDT"+mch+"000001");
            }
        } catch (Exception e){ JOptionPane.showMessageDialog(null, e);}
        finally { try { rs.close(); pst.close();}catch (Exception e){  } }
        
        Fildcombo_name_prod();
        
        txt_code_prod_exdt.setText("");
        txt_specification_exdt.setText("");        
        txt_no_exdt.setText("0");
        txt_weight_exdt.setText("0");
        txt_unit_exdt.setText("kg");
        txt_price_exdt.setText("0");
        txt_monetize_exdt.setText("0");
        combo_name_prod.setSelectedItem("");
        combo_name_prod.requestFocusInWindow();
    }//GEN-LAST:event_cmd_addnewActionPerformed

    private void cmd_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_saveActionPerformed
        try{
            String sql ="INSERT INTO export_detail (code_exdt, code_ex_exdt, code_prod_exdt, specification_exdt, no_exdt, "
            + "weight_exdt, unit_exdt, monetize_exdt, price_exdt, user_exdt) values (?,?,?,?,?,?,?,?,?,?)";

            pst =conn.prepareStatement(sql);
            pst.setString(1, txt_code_exdt.getText());
            pst.setString(2, txt_code_ex_exdt.getText());
            pst.setString(3, txt_code_prod_exdt.getText());
            pst.setString(4, txt_specification_exdt.getText());
            pst.setString(5, txt_no_exdt.getText());
            pst.setString(6, txt_weight_exdt.getText());
            pst.setString(7, txt_unit_exdt.getText());
            pst.setString(8, txt_monetize_exdt.getText());
            pst.setString(9, txt_price_exdt.getText());
            pst.setString(10, dashboard.lable_user.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một Sản phẩm mới vừa được thêm vào!");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_tbl_nameproduct();
    }//GEN-LAST:event_cmd_saveActionPerformed

    private void combo_name_prodPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_name_prodPopupMenuWillBecomeInvisible
        String temp= (String)combo_name_prod.getSelectedItem();

        if(temp.isEmpty()){return;}
        String check = "SELECT count(name_prod) FROM product_information WHERE name_prod = '"+temp+"'";
        try{
        pst=conn.prepareStatement(check);
        rs=pst.executeQuery();
        if (rs.next()){
            final int count = rs.getInt(1);
            if (count < 1){
                int p =JOptionPane.showConfirmDialog(null, "Tên Sản phẩm không tồn tại ! Bạn có muốn tạo mới tên SP này?", "Noop inform", JOptionPane.YES_NO_OPTION);
                if (p==0){
                     new product_frame().setVisible(true);
                }else{combo_name_prod.setSelectedItem(null);}
            }
        }
        }catch (Exception e){JOptionPane.showMessageDialog(null, e);
            }finally {try {rs.close();pst.close();}catch (Exception e){}}
        
    //gan species id toi txt   
    try{    
        String sql="SELECT * FROM product_information WHERE name_prod ='"+temp+"' ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            
            if(rs.next()){
                String code_prod =rs.getString("code_prod");
                txt_code_prod_exdt.setText(code_prod);
            }
        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
            finally { try { rs.close(); pst.close();}catch (Exception e){  } }
    
    txt_specification_exdt.requestFocusInWindow();
    }//GEN-LAST:event_combo_name_prodPopupMenuWillBecomeInvisible

    private void cmd_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_updateActionPerformed
        try{
            String code_exdt = txt_code_exdt.getText();
            String code_prod_exdt = txt_code_prod_exdt.getText();
            String specification_exdt = txt_specification_exdt.getText();
            String no_exdt = txt_no_exdt.getText();
            String weight_exdt = txt_weight_exdt.getText();
            String unit_exdt = txt_unit_exdt.getText();
            String monetize_exdt = txt_monetize_exdt.getText();
            String price_exdt = txt_price_exdt.getText();
            String user_exdt = dashboard.lable_user.getText();

            String sql ="UPDATE export_detail SET code_prod_exdt = '"+code_prod_exdt+"', specification_exdt = '"+specification_exdt+"', "
            + "no_exdt = '"+no_exdt+"', weight_exdt = '"+weight_exdt+"', unit_exdt = '"+unit_exdt+"', "
            + "monetize_exdt = '"+monetize_exdt+"' , price_exdt = '"+price_exdt+"', user_exdt = '"+user_exdt+"' WHERE code_exdt ='"+code_exdt+"'  ";
            pst=conn.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Một thông SP vừa được cập nhật !");

        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        finally {try {rs.close();pst.close();}catch (Exception e){}}

        Update_tbl_nameproduct();
    }//GEN-LAST:event_cmd_updateActionPerformed

    private void cmd_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_deleteActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa dữ liệu SP này không?", "Delete SP", JOptionPane.YES_NO_OPTION);
        if (p==0){
            try{
                String sql="DELETE FROM export_detail where code_exdt = ?";
                pst=conn.prepareStatement(sql);
                pst.setString(1, txt_code_exdt.getText());
                pst.execute();
            }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        }

        Update_tbl_nameproduct();
    }//GEN-LAST:event_cmd_deleteActionPerformed

    private void cmd_lookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_lookActionPerformed
        String tmp = txt_code_ex_exdt.getText().toUpperCase();
        try{

            String sql = "SELECT name_prod AS 'Tên SP' "
                    + "FROM export_detail LEFT JOIN product_information ON export_detail.code_prod_exdt = product_information.code_prod "
                    + "WHERE export_detail.code_ex_exdt ='"+tmp+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            tbl_nameproduct.setModel(DbUtils.resultSetToTableModel(rs));
                    }
            catch (Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close(); pst.close();}catch (Exception e){}}

        try {
            String sql1="SELECT count(code_exdt) FROM export_detail WHERE export_detail.code_ex_exdt ='"+tmp+"' ";
               pst =conn.prepareStatement(sql1);
               rs =pst.executeQuery();

               if (rs.next()){
                   String count = rs.getString("count(code_exdt)");
                   lable_noproduct.setText("No.:"+count);
               }
            }catch (Exception e){JOptionPane.showMessageDialog(null, e); }
                finally { try { rs.close(); pst.close();}catch (Exception e){  } }        
    }//GEN-LAST:event_cmd_lookActionPerformed

    private void txt_monetize_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_monetize_exdtFocusGained
        long price_exdt = Long.parseLong(txt_price_exdt.getText());
        long weight_exdt = Long.parseLong(txt_weight_exdt.getText());
        String monetize_exdt = Long.toString(price_exdt * weight_exdt);
        txt_monetize_exdt.setText(monetize_exdt);
    }//GEN-LAST:event_txt_monetize_exdtFocusGained

    private void txt_specification_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_specification_exdtFocusGained
        txt_specification_exdt.selectAll();
    }//GEN-LAST:event_txt_specification_exdtFocusGained

    private void txt_no_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_no_exdtFocusGained
        txt_no_exdt.selectAll();
    }//GEN-LAST:event_txt_no_exdtFocusGained

    private void txt_weight_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_weight_exdtFocusGained
        txt_weight_exdt.selectAll();
    }//GEN-LAST:event_txt_weight_exdtFocusGained

    private void txt_unit_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_unit_exdtFocusGained
        txt_unit_exdt.selectAll();
    }//GEN-LAST:event_txt_unit_exdtFocusGained

    private void txt_price_exdtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_price_exdtFocusGained
        txt_price_exdt.selectAll();
    }//GEN-LAST:event_txt_price_exdtFocusGained

    private void menu_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_closeActionPerformed
        try {rs.close();pst.close();dispose();}catch (Exception e){}
    }//GEN-LAST:event_menu_closeActionPerformed

    private void menu_refresh_tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_refresh_tableActionPerformed
        Update_tbl_nameproduct();
    }//GEN-LAST:event_menu_refresh_tableActionPerformed

    private void menu_export_xlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_xlsActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export Export_Detail to .xls file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
            if(f.exists()) {
                int p =JOptionPane.showConfirmDialog(null, "File này đã có! Bạn có muốn ghi đè lên file này k?", "Over-write", JOptionPane.YES_NO_OPTION);
                if (p==1){
                return;
                }
            }

                Workbook wb = new HSSFWorkbook();
                Sheet personSheet = wb.createSheet("export_detail");
                //create font style
                HSSFFont font = (HSSFFont) wb.createFont();
                font.setColor(HSSFFont.COLOR_RED);
                font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
                font.setFontHeightInPoints((short) 24);
                HSSFCellStyle cellStyle= (HSSFCellStyle) wb.createCellStyle();
                cellStyle.setFont(font);
                //
                Row titlerow = personSheet.createRow(0);
                titlerow.setHeightInPoints((short) 26);
                Cell nametitle = titlerow.createCell(0);
                nametitle.setCellStyle(cellStyle);
                nametitle.setCellValue("Danh Sách Xuất Chi Tiết");


                Row headerRow = personSheet.createRow(1);
                    Cell code_exdt = headerRow.createCell(0); code_exdt.setCellValue("ID");
                    Cell code_ex = headerRow.createCell(1); code_ex.setCellValue("Export ID");
                    Cell code_prod = headerRow.createCell(2); code_prod.setCellValue("Product ID");
                    Cell specification = headerRow.createCell(3); specification.setCellValue("Specification");
                    Cell no = headerRow.createCell(4); no.setCellValue("No");
                    Cell weight = headerRow.createCell(5); weight.setCellValue("Weight");
                    Cell unit = headerRow.createCell(6); unit.setCellValue("Unit");
                    Cell price = headerRow.createCell(7); price.setCellValue("Price");
                    Cell monetize = headerRow.createCell(8); monetize.setCellValue("Monetize");
                    Cell user = headerRow.createCell(8); user.setCellValue("User");

                try{
                String sql = "SELECT * FROM export_detail ORDER BY code_exdt ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery(); 

                int row = 2;
                while(rs.next()) {
                    Row dataRow = personSheet.createRow(row);

                    Cell code_exdtCell = dataRow.createCell(0);
                        code_exdtCell.setCellValue(rs.getString("code_exdt"));
                    Cell code_ex_exdtCell = dataRow.createCell(1);
                        code_ex_exdtCell.setCellValue(rs.getString("code_ex_exdt"));
                    Cell code_prod_exdtCell = dataRow.createCell(2);
                        code_prod_exdtCell.setCellValue(rs.getString("code_prod_exdt"));
                    Cell specification_exdtCell = dataRow.createCell(3);
                        specification_exdtCell.setCellValue(rs.getString("specification_exdt"));
                    Cell no_exdtCell = dataRow.createCell(4);
                        no_exdtCell.setCellValue(rs.getString("no_exdt"));
                    Cell weight_exdtCell = dataRow.createCell(5);
                        weight_exdtCell.setCellValue(rs.getString("weight_exdt"));
                    Cell unit_exdtCell = dataRow.createCell(6);
                        unit_exdtCell.setCellValue(rs.getString("unit_exdt"));
                    Cell price_exdtCell = dataRow.createCell(7);
                        price_exdtCell.setCellValue(rs.getString("price_exdt"));
                    Cell monetize_exdtCell = dataRow.createCell(8);
                    monetize_exdtCell.setCellValue(rs.getString("monetize_exdt"));
                    Cell user_exdtCell = dataRow.createCell(9);
                    user_exdtCell.setCellValue(rs.getString("user_exdt "));

                    row = row + 1;
                }


                FileOutputStream fileOut = new FileOutputStream(outputDirPath);
                wb.write(fileOut);
                fileOut.close();
                JOptionPane.showMessageDialog(null, "Danh sách Xuất Chi Tiết đã được xuất tới " + outputDirPath);
                } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally { try { rs.close(); pst.close();}catch (Exception e){  } }
        }
    }//GEN-LAST:event_menu_export_xlsActionPerformed

    private void menu_export_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_export_csvActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Export table EXPORT_DETAIL to .csv file");
        int retval = chooser.showSaveDialog(null);
        File f = chooser.getSelectedFile();
        String outputDirPath=f.getAbsolutePath();

        if (retval==JFileChooser.APPROVE_OPTION){
        if(f.exists()) {
            int p =JOptionPane.showConfirmDialog(null, "File đã có! Bạn có muốn ghi đè lên file này?", "Over-write", JOptionPane.YES_NO_OPTION);
            if (p==1){
            return;
            }
        }
            try{
            FileWriter fw = new FileWriter(outputDirPath);
            String sql = " SELECT * FROM export_detail ORDER BY code_exdt";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery(); 

            while(rs.next()) {
                fw.append('"'); fw.append(rs.getString("code_exdt")); fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("code_ex_exdt"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("code_prod_exdt"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("specification_exdt"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("no_exdt"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("weight_exdt"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("unit_exdt"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("price_exdt"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("monetize_exdt"));fw.append('"'); fw.append(',');
                fw.append('"');fw.append(rs.getString("user_exdt"));fw.append('"'); fw.append('\n');
            }
            fw.flush();
            fw.close();
            
            JOptionPane.showMessageDialog(null, "Dữ liệu Xuất Chi Tiết đã được xuất tới " + outputDirPath);
            } catch(Exception e){JOptionPane.showMessageDialog(null, e);}
            finally {try {rs.close();pst.close();}catch (Exception e){}}
        
        }
    }//GEN-LAST:event_menu_export_csvActionPerformed

    private void menu_import_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_import_csvActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có muốn import danh sách Xuất Chi Tiết?", "Import EXPORT", JOptionPane.YES_NO_OPTION);
        if (p==0){
        try{
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String filename1 = f.getAbsolutePath();
            
            BufferedReader br = new BufferedReader(new FileReader(filename1));
            String line;

            while((line = br.readLine())!=null){
                line = line.substring(1, line.length() - 1);
                line=line.replace("null", "");
                String[] value= line.split("\",\""); //seperator \",\"
                String sql = "INSERT INTO export_detail (code_exdt, code_ex_exdt, code_prod_exdt, specification_exdt,"
                        + " no_exdt, weight_exdt, unit_exdt, price_exdt, monetize_exdt, user_exdt) "
                        + "values ('"+value[0]+"', '"+value[1]+"', '"+value[2]+"', "
                        + "'"+value[3]+"', '"+value[4]+"', '"+value[5]+"', '"+value[6]+"', "
                        + "'"+value[7]+"', '"+value[8]+"', '"+value[9]+"')";
                pst=conn.prepareStatement(sql);
                pst.executeUpdate();
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            }
            br.close();
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}
        }
    }//GEN-LAST:event_menu_import_csvActionPerformed

    private void menu_deleteallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_deleteallActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa hết dữ liệu?", "Delete export_detail", JOptionPane.YES_NO_OPTION);
        if (p==0){
        try{
            String sql="DELETE FROM export_detail";
            pst=conn.prepareStatement(sql);
            pst.execute();
        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                finally {try {rs.close();pst.close();}catch (Exception e){}}
        }
        Update_tbl_nameproduct();
    }//GEN-LAST:event_menu_deleteallActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(export_detail_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(export_detail_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(export_detail_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(export_detail_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new export_detail_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_addnew;
    private javax.swing.JButton cmd_close;
    private javax.swing.JButton cmd_delete;
    private javax.swing.JButton cmd_look;
    private javax.swing.JButton cmd_save;
    private javax.swing.JButton cmd_update;
    private javax.swing.JComboBox combo_name_prod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lable_noproduct;
    private javax.swing.JMenuItem menu_close;
    private javax.swing.JMenuItem menu_deleteall;
    private javax.swing.JMenuItem menu_export_csv;
    private javax.swing.JMenuItem menu_export_xls;
    private javax.swing.JMenuItem menu_import_csv;
    private javax.swing.JMenuItem menu_refresh_table;
    private javax.swing.JTable tbl_nameproduct;
    public static javax.swing.JTextField txt_code_ex_exdt;
    private javax.swing.JTextField txt_code_exdt;
    private javax.swing.JTextField txt_code_prod_exdt;
    private javax.swing.JTextField txt_monetize_exdt;
    private javax.swing.JTextField txt_no_exdt;
    private javax.swing.JTextField txt_price_exdt;
    private javax.swing.JTextField txt_specification_exdt;
    private javax.swing.JTextField txt_unit_exdt;
    private javax.swing.JTextField txt_weight_exdt;
    // End of variables declaration//GEN-END:variables

    /// txt complete
}
